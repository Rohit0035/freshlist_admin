{"version":3,"sources":["../node_modules/react-swipeable/es/index.js","../../src/index.js","../../src/react-elastic-carousel/utils/helpers.js","../../src/react-elastic-carousel/components/styled/Button.js","../../src/react-elastic-carousel/consts.js","../../src/react-elastic-carousel/components/styled/ItemWrapper.js","../../src/react-elastic-carousel/components/styled/SliderContainer.js","../../src/react-elastic-carousel/components/styled/Slider.js","../../src/react-elastic-carousel/components/styled/StyledCarousel.js","../../src/react-elastic-carousel/components/styled/CarouselWrapper.js","../../src/react-elastic-carousel/components/ItemWrapperContainer.js","../../src/react-elastic-carousel/components/Track.js","../../src/react-elastic-carousel/components/Arrow.js","../../src/react-elastic-carousel/actions/consts.js","../../src/react-elastic-carousel/reducers/items.js","../../src/react-elastic-carousel/actions/itemsActions.js","../../src/react-elastic-carousel/components/Pagination/Dot.js","../../src/react-elastic-carousel/components/Pagination/Pagination.js","../../src/react-elastic-carousel/components/Carousel.js","../node_modules/react-elastic-carousel/node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","defaultProps","preventDefaultTouchmoveEvent","delta","rotationAngle","trackMouse","trackTouch","initialState","xy","swiping","eventData","undefined","start","rotateXYByAngle","pos","angle","angleInRadians","Math","PI","cos","sin","getHandlers","set","handlerProps","onStart","event","touches","state","props","document","addEventListener","onMove","onUp","_ref","clientX","clientY","initial","concat","first","timeStamp","_ref2","_rotateXYByAngle","x","y","deltaX","deltaY","absX","abs","absY","time","velocity","sqrt","dir","getDirection","onSwiping","cancelablePageSwipe","onSwiped","cancelable","preventDefault","onEnd","cleanUpMouse","removeEventListener","e","attachTouch","el","tls","forEach","_ref3","h","_ref4","output","ref","addState","cleanUpTouch","onMouseDown","updateTransientState","Swipeable","_React$PureComponent","subClass","superClass","_this","_set","cb","transientState","type","create","constructor","__proto__","render","_this$props","className","style","_this$props$nodeName","nodeName","innerRef","children","_getHandlers","handlers","React","createElement","PureComponent","propTypes","PropTypes","func","onSwipedUp","onSwipedRight","onSwipedDown","onSwipedLeft","number","bool","string","Only","when","hiddenMode","singleChild","Children","only","restOfChildProps","extendedProps","keepNode","display","visibility","cloned","cloneElement","Component","element","isRequired","oneOf","noop","numberToArray","n","Array","keys","cssPrefix","prefix","space","result","classNames","chainedClasses","reduce","acc","current","pipe","fns","v","f","styled","button","attrs","_templateObject","disabled","ItemWrapper","div","_templateObject$1","itemPosition","consts","object","_templateObject$2","calcLeft","isRTL","verticalMode","isSwiping","swipedSliderPosition","sliderPosition","calcRight","calcTop","calcTransition","transitionMs","easing","tiltEasing","effectiveEasing","transition","left","right","top","_templateObject$3","outerSpacing","height","size","_templateObject$4","_templateObject$5","ItemWrapperContainer","onClick","id","oneOfType","Track","childWidth","autoTabIndexVisibleItems","enableSwipe","enableMouseSwipe","itemsToShow","itemsToScroll","currentItem","itemPadding","onItemClick","width","paddingStyle","join","minVisibleItem","maxVisibleItem","prevItem","nextItem","originalChildren","map","child","idx","isVisible","isPrevItem","isNextItem","itemClass","childToRender","tabIndex","padding","flexDirection","stopPropagation","array","noAutoTabbedItems","directionIcons","up","down","arrowClassname","Arrow","direction","icons","rest","arrows","styleObj","rotate","transform","rotateStyle","Button","cx","activeIndexReducer","action","limit","optimisticNextItem","optimisticPrevItem","nextItemAction","prevItemAction","Dot","_templateObject$6","active","DotContainer","Indicators","_templateObject$7","Pagination","numOfPages","activePage","pages","item","Carousel","rootHeight","childHeight","transitioning","activeIndex","initialActiveIndex","initialFirstItem","sliderContainerWidth","name","ro","ResizeObserver","entries","observer","entry","sliderContainer","window","requestAnimationFrame","onContainerResize","slider","onSliderResize","observe","disconnect","autoPlaySpeed","getDerivedPropsFromBreakPoint","autoPlayIntervalId","setInterval","isComponentMounted","slideNext","clearInterval","getNumOfPages","setState","fn","currentBreakPoint","breakPoints","restOfProps","slice","reverse","find","bp","calculateChildWidth","totalItems","toArray","moveBy","emptySlots","newActiveIndex","sliderNode","sliderHeight","contentRect","nextState","childrenLength","min","showEmptySlots","sliderContainerNode","newSliderContainerWidth","containerWidth","onResize","currentState","maxItemsToShow","endLimit","updateSliderPosition","position","distance","duration","setTimeout","index","roundedIdx","round","currentIndex","getPrev","nextAction","nextItemIndex","getNextItemIndex","data","goingNext","goingBack","horizontalSwipe","verticalSwipe","horizontalMode","distanceSwipe","horizontalEdgeStoppage","verticalEdgeStoppage","resetSwipe","minSwipeDistanceHorizontal","minSwipeDistanceVertical","swipedLeft","swipedRight","swipedUp","swipedDown","goodToGo","numberOfSlidesViaSwipe","ceil","numberOfSlidesTogo","max","backSlidesToGo","forwardSlideTtoGo","goTo","skipTilt","options","onNextStart","nextItemObj","getNextItemObj","convertChildToCbObj","onPrevStart","slidePrev","enableTilt","tiltMovement","onNextEnd","onChange","removeSliderTransitionHook","onPrevEnd","nextItemId","childSize","safeNextItemId","isPrev","positionEndCb","stateUpdater","generatePositionUpdater","updateActivePage","onSliderTransitionEnd","safeItemsToShow","inRangeItemsToShow","newActivePage","inRangeActivePageIndex","indicatorId","gotoIndex","initResizeObserver","setPages","prevProps","prevState","enableAutoPlay","currentChildrenLength","prevChildrenLength","removeAutoPlay","setAutoPlay","calculatedItemsToShow","unSubscribeObserver","focusOnSelect","pagination","showArrows","disableArrowsOnEnd","renderArrow","renderPagination","canSlidePrev","canSlideNext","disabledPrevArrow","disabledNextArrow","CarouselWrapper","StyledCarousel","isEdge","SliderContainer","setRef","Slider","onIndicatorClick","node","arrayOf","shape","MapShim","Map","getIndex","arr","some","anonymous","__entries__","prototypeAccessors","configurable","get","value","push","delete","splice","has","clear","callback","ctx","list","defineProperties","isBrowser","global$1","global","self","Function","requestAnimationFrame$1","bind","Date","now","transitionKeys","mutationObserverSupported","MutationObserver","ResizeObserverController","connected_","mutationEventsAdded_","mutationsObserver_","observers_","onTransitionEnd_","refresh","delay","leadingCall","trailingCall","lastCallTime","resolvePending","proxy","timeoutCallback","throttle","addObserver","indexOf","connect_","removeObserver","observers","disconnect_","updateObservers_","activeObservers","filter","gatherActive","hasActive","broadcastActive","attributes","childList","characterData","subtree","propertyName","getInstance","instance_","defineConfigurable","defineProperty","enumerable","writable","getWindowOf","ownerDocument","defaultView","emptyRect","createRectInit","toFloat","parseFloat","getBordersSize","styles","positions","len","getHTMLElementContentRect","clientWidth","clientHeight","getComputedStyle","paddings","getPaddings","horizPad","vertPad","bottom","boxSizing","documentElement","isDocumentElement","vertScrollbar","horizScrollbar","isSVGGraphicsElement","SVGGraphicsElement","SVGElement","getBBox","getContentRect","bbox","getSVGContentRect","ResizeObservation","broadcastWidth","broadcastHeight","contentRect_","isActive","rect","broadcastRect","ResizeObserverEntry","rectInit","Constr","DOMRectReadOnly","createReadOnlyRect","ResizeObserverSPI","controller","callbackCtx","activeObservations_","observations_","TypeError","callback_","controller_","callbackCtx_","Element","observations","unobserve","clearActive","this$1","observation","WeakMap","method"],"mappings":"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","file":"static/js/28.4ecdb2b6.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar defaultProps = {\n  preventDefaultTouchmoveEvent: false,\n  delta: 10,\n  rotationAngle: 0,\n  trackMouse: false,\n  trackTouch: true\n};\nvar initialState = {\n  xy: [0, 0],\n  swiping: false,\n  eventData: undefined,\n  start: undefined\n};\nvar LEFT = 'Left';\nvar RIGHT = 'Right';\nvar UP = 'Up';\nvar DOWN = 'Down';\nvar touchStart = 'touchstart';\nvar touchMove = 'touchmove';\nvar touchEnd = 'touchend';\nvar mouseMove = 'mousemove';\nvar mouseUp = 'mouseup';\n\nfunction getDirection(absX, absY, deltaX, deltaY) {\n  if (absX > absY) {\n    if (deltaX > 0) {\n      return LEFT;\n    }\n\n    return RIGHT;\n  } else if (deltaY > 0) {\n    return UP;\n  }\n\n  return DOWN;\n}\n\nfunction rotateXYByAngle(pos, angle) {\n  if (angle === 0) return pos;\n  var angleInRadians = Math.PI / 180 * angle;\n  var x = pos[0] * Math.cos(angleInRadians) + pos[1] * Math.sin(angleInRadians);\n  var y = pos[1] * Math.cos(angleInRadians) - pos[0] * Math.sin(angleInRadians);\n  return [x, y];\n}\n\nfunction getHandlers(set, handlerProps) {\n  var onStart = function onStart(event) {\n    // if more than a single touch don't track, for now...\n    if (event.touches && event.touches.length > 1) return;\n    set(function (state, props) {\n      // setup mouse listeners on document to track swipe since swipe can leave container\n      if (props.trackMouse) {\n        document.addEventListener(mouseMove, onMove);\n        document.addEventListener(mouseUp, onUp);\n      }\n\n      var _ref = event.touches ? event.touches[0] : event,\n          clientX = _ref.clientX,\n          clientY = _ref.clientY;\n\n      var xy = rotateXYByAngle([clientX, clientY], props.rotationAngle);\n      return _extends({}, state, initialState, {\n        eventData: {\n          initial: [].concat(xy),\n          first: true\n        },\n        xy: xy,\n        start: event.timeStamp || 0\n      });\n    });\n  };\n\n  var onMove = function onMove(event) {\n    set(function (state, props) {\n      if (!state.xy[0] || !state.xy[1] || event.touches && event.touches.length > 1) {\n        return state;\n      }\n\n      var _ref2 = event.touches ? event.touches[0] : event,\n          clientX = _ref2.clientX,\n          clientY = _ref2.clientY;\n\n      var _rotateXYByAngle = rotateXYByAngle([clientX, clientY], props.rotationAngle),\n          x = _rotateXYByAngle[0],\n          y = _rotateXYByAngle[1];\n\n      var deltaX = state.xy[0] - x;\n      var deltaY = state.xy[1] - y;\n      var absX = Math.abs(deltaX);\n      var absY = Math.abs(deltaY);\n      var time = (event.timeStamp || 0) - state.start;\n      var velocity = Math.sqrt(absX * absX + absY * absY) / (time || 1); // if swipe is under delta and we have not started to track a swipe: skip update\n\n      if (absX < props.delta && absY < props.delta && !state.swiping) return state;\n      var dir = getDirection(absX, absY, deltaX, deltaY);\n\n      var eventData = _extends({}, state.eventData, {\n        event: event,\n        absX: absX,\n        absY: absY,\n        deltaX: deltaX,\n        deltaY: deltaY,\n        velocity: velocity,\n        dir: dir\n      });\n\n      props.onSwiping && props.onSwiping(eventData); // track if a swipe is cancelable(handler for swiping or swiped(dir) exists)\n      // so we can call preventDefault if needed\n\n      var cancelablePageSwipe = false;\n\n      if (props.onSwiping || props.onSwiped || props[\"onSwiped\" + dir]) {\n        cancelablePageSwipe = true;\n      }\n\n      if (cancelablePageSwipe && props.preventDefaultTouchmoveEvent && props.trackTouch && event.cancelable) event.preventDefault(); // first is now always false\n\n      return _extends({}, state, {\n        eventData: _extends({}, eventData, {\n          first: false\n        }),\n        swiping: true\n      });\n    });\n  };\n\n  var onEnd = function onEnd(event) {\n    set(function (state, props) {\n      var eventData;\n\n      if (state.swiping) {\n        eventData = _extends({}, state.eventData, {\n          event: event\n        });\n        props.onSwiped && props.onSwiped(eventData);\n        props[\"onSwiped\" + eventData.dir] && props[\"onSwiped\" + eventData.dir](eventData);\n      }\n\n      return _extends({}, state, initialState, {\n        eventData: eventData\n      });\n    });\n  };\n\n  var cleanUpMouse = function cleanUpMouse() {\n    // safe to just call removeEventListener\n    document.removeEventListener(mouseMove, onMove);\n    document.removeEventListener(mouseUp, onUp);\n  };\n\n  var onUp = function onUp(e) {\n    cleanUpMouse();\n    onEnd(e);\n  };\n\n  var attachTouch = function attachTouch(el) {\n    if (el && el.addEventListener) {\n      // attach touch event listeners and handlers\n      var tls = [[touchStart, onStart], [touchMove, onMove], [touchEnd, onEnd]];\n      tls.forEach(function (_ref3) {\n        var e = _ref3[0],\n            h = _ref3[1];\n        return el.addEventListener(e, h);\n      }); // return properly scoped cleanup method for removing listeners\n\n      return function () {\n        return tls.forEach(function (_ref4) {\n          var e = _ref4[0],\n              h = _ref4[1];\n          return el.removeEventListener(e, h);\n        });\n      };\n    }\n  };\n\n  var onRef = function onRef(el) {\n    // \"inline\" ref functions are called twice on render, once with null then again with DOM element\n    // ignore null here\n    if (el === null) return;\n    set(function (state, props) {\n      // if the same DOM el as previous just return state\n      if (state.el === el) return state;\n      var addState = {}; // if new DOM el clean up old DOM and reset cleanUpTouch\n\n      if (state.el && state.el !== el && state.cleanUpTouch) {\n        state.cleanUpTouch();\n        addState.cleanUpTouch = null;\n      } // only attach if we want to track touch\n\n\n      if (props.trackTouch && el) {\n        addState.cleanUpTouch = attachTouch(el);\n      } // store event attached DOM el for comparison, clean up, and re-attachment\n\n\n      return _extends({}, state, {\n        el: el\n      }, addState);\n    });\n  }; // set ref callback to attach touch event listeners\n\n\n  var output = {\n    ref: onRef // if track mouse attach mouse down listener\n\n  };\n\n  if (handlerProps.trackMouse) {\n    output.onMouseDown = onStart;\n  }\n\n  return [output, attachTouch];\n}\n\nfunction updateTransientState(state, props, attachTouch) {\n  var addState = {}; // clean up touch handlers if no longer tracking touches\n\n  if (!props.trackTouch && state.cleanUpTouch) {\n    state.cleanUpTouch();\n    addState.cleanUpTouch = null;\n  } else if (props.trackTouch && !state.cleanUpTouch) {\n    // attach/re-attach touch handlers\n    if (state.el) {\n      addState.cleanUpTouch = attachTouch(state.el);\n    }\n  }\n\n  return _extends({}, state, addState);\n}\n\nfunction useSwipeable(props) {\n  var trackMouse = props.trackMouse;\n  var transientState = React.useRef(_extends({}, initialState, {\n    type: 'hook'\n  }));\n  var transientProps = React.useRef();\n  transientProps.current = _extends({}, defaultProps, props);\n\n  var _React$useMemo = React.useMemo(function () {\n    return getHandlers(function (cb) {\n      return transientState.current = cb(transientState.current, transientProps.current);\n    }, {\n      trackMouse: trackMouse\n    });\n  }, [trackMouse]),\n      handlers = _React$useMemo[0],\n      attachTouch = _React$useMemo[1];\n\n  transientState.current = updateTransientState(transientState.current, transientProps.current, attachTouch);\n  return handlers;\n}\nvar Swipeable =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inheritsLoose(Swipeable, _React$PureComponent);\n\n  function Swipeable(props) {\n    var _this;\n\n    _this = _React$PureComponent.call(this, props) || this;\n\n    _this._set = function (cb) {\n      _this.transientState = cb(_this.transientState, _this.props);\n    };\n\n    _this.transientState = _extends({}, initialState, {\n      type: 'class'\n    });\n    return _this;\n  }\n\n  var _proto = Swipeable.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        style = _this$props.style,\n        _this$props$nodeName = _this$props.nodeName,\n        nodeName = _this$props$nodeName === void 0 ? 'div' : _this$props$nodeName,\n        innerRef = _this$props.innerRef,\n        children = _this$props.children,\n        trackMouse = _this$props.trackMouse;\n\n    var _getHandlers = getHandlers(this._set, {\n      trackMouse: trackMouse\n    }),\n        handlers = _getHandlers[0],\n        attachTouch = _getHandlers[1];\n\n    this.transientState = updateTransientState(this.transientState, this.props, attachTouch);\n    var ref = innerRef ? function (el) {\n      return innerRef(el), handlers.ref(el);\n    } : handlers.ref;\n    return React.createElement(nodeName, _extends({}, handlers, {\n      className: className,\n      style: style,\n      ref: ref\n    }), children);\n  };\n\n  return Swipeable;\n}(React.PureComponent);\nSwipeable.propTypes = {\n  onSwiped: PropTypes.func,\n  onSwiping: PropTypes.func,\n  onSwipedUp: PropTypes.func,\n  onSwipedRight: PropTypes.func,\n  onSwipedDown: PropTypes.func,\n  onSwipedLeft: PropTypes.func,\n  delta: PropTypes.number,\n  preventDefaultTouchmoveEvent: PropTypes.bool,\n  nodeName: PropTypes.string,\n  trackMouse: PropTypes.bool,\n  trackTouch: PropTypes.bool,\n  innerRef: PropTypes.func,\n  rotationAngle: PropTypes.number\n};\nSwipeable.defaultProps = defaultProps;\n\nexport { DOWN, LEFT, RIGHT, Swipeable, UP, useSwipeable };\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Only extends Component {\n\n  static defaultProps = {\n    hiddenMode: \"withNull\",\n    className: \"r-o_hidden\"\n  }\n\n  static propTypes = {\n    /** A single child element */\n    children: PropTypes.element.isRequired,\n\n    /** When true, children will rendered as is  */\n    when: PropTypes.bool.isRequired,\n\n    /** Determines how \"react-only-when\" should hide the child element \n     * \"withNull\": Will not render the child\n     * \"withDisplay\": Will render the child with display:none  \n     * \"withVisibility\": Will render the child with visibility:hidden\n     * \"withCss\": Will render the child with a CSS class (you can pass it a custom className prop)\n    */\n    hiddenMode: PropTypes.oneOf([\n      \"withNull\",\n      \"withDisplay\",\n      \"withVisibility\",\n      \"withCss\"\n    ]),\n    /** This is working in combination with hiddenMode={\"withCss\"}   */\n    className: PropTypes.string\n  }\n\n  render() {\n    const { children, when, hiddenMode, className } = this.props;\n    const singleChild = React.Children.only(children);\n    const { style, ...restOfChildProps } = singleChild.props;\n    const extendedProps = { ...restOfChildProps };\n\n    const keepNode = hiddenMode && hiddenMode !== \"withNull\";\n\n    if (keepNode) {\n      if (hiddenMode === \"withCss\") {\n        extendedProps.className = `${extendedProps.className} ${className}`;\n      } else {\n        extendedProps.style = {\n          ...style,\n          ...(hiddenMode === \"withDisplay\" && { display: \"none\" }),\n          ...(hiddenMode === \"withVisibility\" && { visibility: \"hidden\" })\n        };\n      }\n    }\n    const cloned = React.cloneElement(singleChild, extendedProps);\n    const toHide = keepNode ? cloned : null;\n\n    return when ? singleChild : toHide;\n  }\n}\n\nexport default Only;\n","export const noop = () => {};\n\nexport const numberToArray = n => [...Array(n).keys()];\n\nexport const cssPrefix = (...classNames) => {\n  const prefix = \"rec\";\n  const space = \" \";\n  let result = `${prefix}`; // initial it with global prefix;\n\n  // in case of an array we add the class prefix per item;\n  const chainedClasses = classNames.reduce((acc, current) => {\n    if (current) {\n      acc += `${space}${prefix}-${current}`; // we must keep spaces between class names\n    }\n    return acc;\n  }, \"\");\n  result += chainedClasses;\n\n  return result;\n};\n\nexport const pipe = (...fns) => x => fns.reduce((v, f) => f(v), x);\n\nexport const throttle = (func, limit) => {\n  let lastFunc;\n  let lastRan;\n  return function() {\n    const context = this;\n    const args = arguments;\n    if (!lastRan) {\n      func.apply(context, args);\n      lastRan = Date.now();\n    } else {\n      clearTimeout(lastFunc);\n      lastFunc = setTimeout(function() {\n        if (Date.now() - lastRan >= limit) {\n          func.apply(context, args);\n          lastRan = Date.now();\n        }\n      }, limit - (Date.now() - lastRan));\n    }\n  };\n};\n","import styled from \"styled-components\";\n\nexport default styled.button.attrs(({ type = \"button\" }) => ({ type }))`\n  box-sizing: border-box;\n  transition: all 0.3s ease;\n  font-size: 1.6em;\n  background-color: rgba(103, 58, 183, 0.1);\n  color: ${props => (props.disabled ? \"#999\" : \"#333\")};\n  box-shadow: 0 0 2px 0px #333;\n  border-radius: 50%;\n  border: none;\n  padding: 0;\n  width: 50px;\n  height: 50px;\n  min-width: 50px;\n  line-height: 50px;\n  align-self: center;\n  cursor: pointer;\n  outline: none;\n  &:hover:enabled,\n  &:focus:enabled {\n    color: #fff;\n    background-color: rgba(103, 58, 183, 1);\n    box-shadow: 0 0 2px 0 #333;\n  }\n  &:disabled {\n    cursor: not-allowed;\n  }\n`;\n","export default {\n  PREV: \"PREV\",\n  NEXT: \"NEXT\",\n  START: \"flex-start\",\n  CENTER: \"center\",\n  END: \"flex-end\"\n};\n","import styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport { cssPrefix } from \"../../utils/helpers\";\nimport consts from \"../../consts\";\n\nconst ItemWrapper = styled.div.attrs(({ style }) => ({\n  style,\n  className: cssPrefix(\"item-wrapper\")\n}))`\n  box-sizing: border-box;\n  display: flex;\n  overflow: hidden;\n  user-select: none;\n  justify-content: ${({ itemPosition }) => itemPosition};\n`;\n\nItemWrapper.defaultProps = {\n  style: {},\n  itemPosition: consts.CENTER\n};\n\nItemWrapper.propTypes = {\n  children: PropTypes.element.isRequired,\n  style: PropTypes.object,\n  itemPosition: PropTypes.oneOf([consts.START, consts.CENTER, consts.END])\n};\n\nexport default ItemWrapper;\n","import styled from \"styled-components\";\n\nexport default styled.div`\n  overflow: hidden;\n  position: relative;\n  width: 100%;\n  margin: 0 10px;\n`;\n","import styled from \"styled-components\";\n\nconst calcLeft = ({\n  isRTL,\n  verticalMode,\n  isSwiping,\n  swipedSliderPosition,\n  sliderPosition\n}) => {\n  if (verticalMode || isRTL) {\n    return \"auto\";\n  } else {\n    return `${isSwiping ? swipedSliderPosition : sliderPosition}px`;\n  }\n};\n\nconst calcRight = ({\n  isRTL,\n  verticalMode,\n  isSwiping,\n  swipedSliderPosition,\n  sliderPosition\n}) => {\n  if (!verticalMode && isRTL) {\n    return `${isSwiping ? swipedSliderPosition : sliderPosition}px`;\n  } else {\n    return \"auto\";\n  }\n};\n\nconst calcTop = ({\n  verticalMode,\n  isSwiping,\n  swipedSliderPosition,\n  sliderPosition\n}) => {\n  if (!verticalMode) {\n    return \"auto\";\n  } else {\n    return `${isSwiping ? swipedSliderPosition : sliderPosition}px`;\n  }\n};\n\nconst calcTransition = ({ isSwiping, transitionMs, easing, tiltEasing }) => {\n  const duration = isSwiping ? 0 : transitionMs;\n  const effectiveEasing = isSwiping ? tiltEasing : easing;\n  return `all ${duration}ms ${effectiveEasing}`;\n};\n\n// We use attributes (style) to bypass multiple creation of classes (dynamic styling)\nexport default styled.div.attrs(props => ({\n  style: {\n    transition: calcTransition(props),\n    left: calcLeft(props),\n    right: calcRight(props),\n    top: calcTop(props)\n  }\n}))`\n  position: absolute;\n  display: flex;\n  flex-direction: ${({ verticalMode }) => (verticalMode ? \"column\" : \"row\")};\n  ${({ verticalMode }) => (verticalMode ? \"min-height: 100%;\" : \"\")};\n  ${({ verticalMode, outerSpacing }) =>\n    verticalMode ? \"\" : `margin: 0 ${outerSpacing}px;`};\n`;\n","import styled from \"styled-components\";\n\nexport default styled.div.attrs(props => ({\n  style: {\n    height: props.size.height\n  }\n}))`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n`;\n","import styled from \"styled-components\";\n\nexport default styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  direction: ${({ isRTL }) => (isRTL ? \"rtl\" : \"ltr\")};\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ItemWrapper } from \"./styled\";\nimport { noop } from \"../utils/helpers\";\n\nclass ItemWrapperContainer extends React.Component {\n  onClick = () => {\n    const { onClick, id } = this.props;\n    onClick(id);\n  };\n  render() {\n    return <ItemWrapper {...this.props} onClick={this.onClick} />;\n  }\n}\n\nItemWrapperContainer.defaultProps = {\n  onClick: noop\n};\n\nItemWrapperContainer.propTypes = {\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  onClick: PropTypes.func\n};\n\nexport default ItemWrapperContainer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Swipeable } from \"react-swipeable\";\nimport { cssPrefix } from \"../utils/helpers\";\nimport ItemWrapperContainer from \"./ItemWrapperContainer\";\n\nconst Track = ({\n  children,\n  childWidth,\n  autoTabIndexVisibleItems,\n  enableSwipe,\n  enableMouseSwipe,\n  preventDefaultTouchmoveEvent,\n  itemsToShow,\n  itemsToScroll,\n  currentItem,\n  itemPosition,\n  itemPadding,\n  onSwiped,\n  onSwiping,\n  verticalMode,\n  onItemClick\n}) => {\n  const width = `${childWidth}px`;\n  const paddingStyle = `${itemPadding.join(\"px \")}px`;\n  const minVisibleItem = currentItem;\n  const maxVisibleItem = currentItem + itemsToShow;\n  const prevItem = minVisibleItem - itemsToScroll;\n  const nextItem = maxVisibleItem + itemsToScroll;\n\n  const originalChildren = React.Children.map(children, (child, idx) => {\n    const isVisible = idx >= minVisibleItem && idx < maxVisibleItem;\n    const isPrevItem = !isVisible && idx >= prevItem && idx < currentItem;\n    const isNextItem = !isVisible && idx < nextItem && idx > currentItem;\n    const itemClass = \"carousel-item\";\n\n    const childToRender = autoTabIndexVisibleItems\n      ? React.cloneElement(child, {\n          tabIndex: isVisible ? 0 : -1\n        })\n      : child;\n    return (\n      <div\n        className={cssPrefix(\n          itemClass,\n          `${itemClass}-${idx}`,\n          `${itemClass}-${isVisible ? \"visible\" : \"hidden\"}`,\n          isPrevItem && `${itemClass}-prev`,\n          isNextItem && `${itemClass}-next`\n        )}\n      >\n        <ItemWrapperContainer\n          id={idx}\n          itemPosition={itemPosition}\n          style={{ width, padding: paddingStyle }}\n          key={idx}\n          onClick={onItemClick}\n        >\n          {childToRender}\n        </ItemWrapperContainer>\n      </div>\n    );\n  });\n  const toRender = enableSwipe ? (\n    <Swipeable\n      style={{\n        display: \"flex\",\n        flexDirection: verticalMode ? \"column\" : \"row\"\n      }}\n      stopPropagation\n      preventDefaultTouchmoveEvent={preventDefaultTouchmoveEvent}\n      trackMouse={enableMouseSwipe}\n      onSwiped={onSwiped}\n      onSwiping={onSwiping}\n      className={cssPrefix(\"swipable\")}\n    >\n      {originalChildren}\n    </Swipeable>\n  ) : (\n    originalChildren\n  );\n  return toRender;\n};\n\nTrack.propTypes = {\n  children: PropTypes.array.isRequired,\n  itemsToShow: PropTypes.number.isRequired,\n  noAutoTabbedItems: PropTypes.bool,\n  currentItem: PropTypes.number.isRequired,\n  itemPosition: PropTypes.string,\n  itemPadding: PropTypes.array,\n  childWidth: PropTypes.number,\n  verticalMode: PropTypes.bool,\n  enableSwipe: PropTypes.bool,\n  enableMouseSwipe: PropTypes.bool,\n  preventDefaultTouchmoveEvent: PropTypes.bool,\n  onSwiped: PropTypes.func,\n  onSwiping: PropTypes.func,\n  onItemClick: PropTypes.func\n};\n\nexport default Track;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport cx from \"classnames\";\nimport { cssPrefix } from \"../utils/helpers\";\nimport { Button } from \"./styled\";\n\nconst directionIcons = {\n  left: \"❮\",\n  right: \"❯\",\n  up: \"❮\",\n  down: \"❯\"\n};\n\nconst arrowClassname = cssPrefix(\"arrow\");\n\nconst rotateStyle = direction => {\n  let rotate = {};\n  if (direction === Arrow.up || direction === Arrow.down) {\n    rotate.transform = \"rotate(90deg)\";\n  }\n  return rotate;\n};\nconst Arrow = ({ direction, onClick, icons, style, ...rest }) => {\n  const arrows = { ...directionIcons, ...icons };\n  const styleObj = {\n    ...rotateStyle(direction),\n    ...style\n  };\n  return (\n    <Button\n      tabIndex={0}\n      onClick={onClick}\n      className={cx(arrowClassname, `${arrowClassname}-${direction}`)}\n      style={styleObj}\n      {...rest}\n    >\n      {arrows[direction]}\n    </Button>\n  );\n};\n\nArrow.left = \"left\";\nArrow.right = \"right\";\nArrow.up = \"up\";\nArrow.down = \"down\";\n\nArrow.propTypes = {\n  direction: PropTypes.oneOf([\"left\", \"right\", \"up\", \"down\"]).isRequired,\n  icons: PropTypes.object,\n  style: PropTypes.object,\n  onClick: PropTypes.func\n};\n\nexport default Arrow;\n","export const NEXT_ITEM = \"NEXT_ITEM\";\nexport const PREV_ITEM = \"PREV_ITEM\";\n","import { NEXT_ITEM, PREV_ITEM } from \"../actions/consts\";\n\nexport const activeIndexReducer = (state, action) => {\n  const { limit, itemsToScroll, type } = action;\n  switch (type) {\n    case NEXT_ITEM: {\n      let optimisticNextItem = state + itemsToScroll;\n      const nextItem = limit >= optimisticNextItem ? optimisticNextItem : limit;\n      return nextItem;\n    }\n\n    case PREV_ITEM: {\n      let optimisticPrevItem = state - itemsToScroll;\n      const prevItem = optimisticPrevItem >= limit ? optimisticPrevItem : limit;\n      return prevItem;\n    }\n\n    default:\n      return state;\n  }\n};\n","import { NEXT_ITEM, PREV_ITEM } from \"./consts\";\n\nexport const nextItemAction = (limit, itemsToScroll) => ({\n  type: NEXT_ITEM,\n  limit,\n  itemsToScroll\n});\n\nexport const prevItemAction = (limit, itemsToScroll) => ({\n  type: PREV_ITEM,\n  limit,\n  itemsToScroll\n});\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport { cssPrefix } from \"../../utils/helpers\";\n\nconst boxShadow = \"0 0 1px 2px rgba(0, 0, 0, 0.5)\";\nconst activeBoxShadow = \"0 0 1px 3px rgba(103,58,183,1)\";\nconst hoveredBoxShadow = \"0 0 1px 3px rgba(103,58,183,.5)\";\n\nconst Dot = styled.button.attrs(({ type = \"button\" }) => ({ type }))`\n  box-sizing: border-box;\n  padding: 0;\n  transition: all 250ms ease;\n  border: none;\n  margin: 5px;\n  background-color: ${({ active }) =>\n    active ? \"rgba(103,58,183,.5)\" : \"transparent\"};\n  font-size: 1.3em;\n  content: \"\";\n  height: 10px;\n  width: 10px;\n  box-shadow: ${({ active }) => (active ? activeBoxShadow : boxShadow)};\n  border-radius: 50%;\n  outline: none;\n  &:hover,\n  &:focus {\n    cursor: pointer;\n    box-shadow: ${({ active }) =>\n      active ? activeBoxShadow : hoveredBoxShadow};\n  }\n`;\n\nclass DotContainer extends React.Component {\n  onClick = () => {\n    const { onClick, id } = this.props;\n    onClick(id);\n  };\n  render() {\n    const { active } = this.props;\n    return (\n      <Dot\n        tabIndex={active ? -1 : 0}\n        onClick={this.onClick}\n        active={active}\n        className={`${cssPrefix(\"dot\")} ${\n          active ? cssPrefix(\"dot_active\") : \"\"\n        }`}\n      />\n    );\n  }\n}\n\nDotContainer.propTypes = {\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  active: PropTypes.bool,\n  onClick: PropTypes.func\n};\n\nexport default DotContainer;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Dot from \"./Dot\";\nimport { numberToArray, cssPrefix, noop } from \"../../utils/helpers\";\n\nconst Indicators = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  margin-top: 15px;\n`;\n\nclass Pagination extends React.Component {\n  render() {\n    const { numOfPages, activePage, onClick } = this.props;\n    const pages = numberToArray(numOfPages);\n    return (\n      <Indicators className={cssPrefix(\"pagination\")}>\n        {pages.map((item, i) => (\n          <Dot key={i} id={i} active={i === activePage} onClick={onClick} />\n        ))}\n      </Indicators>\n    );\n  }\n}\n\nPagination.defaultProps = {\n  onClick: noop\n};\n\nPagination.propTypes = {\n  numOfPages: PropTypes.number.isRequired,\n  activePage: PropTypes.number.isRequired,\n  onClick: PropTypes.func\n};\n\nexport default Pagination;\n","import React, { Children } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ResizeObserver from \"resize-observer-polyfill\";\nimport Only from \"react-only-when\";\nimport Track from \"./Track\";\nimport Arrow from \"./Arrow\";\nimport consts from \"../consts\";\nimport { activeIndexReducer } from \"../reducers/items\";\nimport { nextItemAction, prevItemAction } from \"../actions/itemsActions\";\nimport {\n  SliderContainer,\n  Slider,\n  StyledCarousel,\n  CarouselWrapper\n} from \"./styled\";\nimport { pipe, noop, cssPrefix, numberToArray } from \"../utils/helpers\";\nimport { Pagination } from \"./Pagination\";\n\nclass Carousel extends React.Component {\n  isComponentMounted = false;\n  state = {\n    rootHeight: 0,\n    childHeight: 0,\n    sliderPosition: 0,\n    swipedSliderPosition: 0,\n    isSwiping: false,\n    transitioning: false,\n    transitionMs: this.props.transitionMs,\n    activeIndex: this.props.initialActiveIndex || this.props.initialFirstItem, // support deprecated  initialFirstItem\n    pages: [],\n    activePage: 0,\n    sliderContainerWidth: 0\n  };\n\n  componentDidMount() {\n    this.isComponentMounted = true;\n    this.initResizeObserver();\n    this.updateActivePage();\n    this.setPages();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      enableAutoPlay,\n      children,\n      itemsToShow,\n      itemsToScroll,\n      breakPoints\n    } = this.props;\n    const { activeIndex, sliderContainerWidth } = this.state;\n    const nextItem = this.getNextItemIndex(activeIndex, false);\n    const currentChildrenLength = Children.toArray(children).length;\n    const prevChildrenLength = Children.toArray(prevProps.children).length;\n    // update pages (for pagination)\n    if (\n      prevChildrenLength !== currentChildrenLength ||\n      prevProps.itemsToShow !== itemsToShow ||\n      prevProps.itemsToScroll !== itemsToScroll ||\n      prevProps.breakPoints !== breakPoints ||\n      sliderContainerWidth !== prevState.sliderContainerWidth\n    ) {\n      // we mimic a container resize to recalculate item width when itemsToShow are updated\n      this.onContainerResize({ contentRect: { width: sliderContainerWidth } });\n      this.setPages();\n      this.updateActivePage();\n    }\n\n    // autoplay update\n    if (activeIndex === nextItem) {\n      this.removeAutoPlay();\n    } else if (enableAutoPlay && !this.autoPlayIntervalId) {\n      this.setAutoPlay();\n    } else if (!enableAutoPlay && this.autoPlayIntervalId) {\n      this.removeAutoPlay();\n    }\n\n    if (prevChildrenLength !== currentChildrenLength) {\n      const {\n        itemsToShow: calculatedItemsToShow\n      } = this.getDerivedPropsFromBreakPoint();\n      // number of items is reduced (we don't care if number of items is increased)\n      // we need to check if our current index is not out of boundaries\n      // we need to include itemsToShow so we can fill up the slots\n      const lastIndex = currentChildrenLength - 1;\n      const isOutOfRange = activeIndex + calculatedItemsToShow > lastIndex;\n      if (isOutOfRange) {\n        // we are out of boundaries, go \"back\" to last item of the list (respect itemsToShow)\n        this.goTo(Math.max(0, currentChildrenLength - calculatedItemsToShow));\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.isComponentMounted = false;\n    this.removeAutoPlay();\n    this.unSubscribeObserver();\n  }\n\n  setRef = name => ref => (this[name] = ref);\n\n  initResizeObserver = () => {\n    this.ro = new ResizeObserver((entries, observer) => {\n      for (const entry of entries) {\n        if (entry.target === this.sliderContainer) {\n          // we are using rAF because it fixes the infinite refresh with gatsby (ssr?).\n          // TBH, I'm not sure i fully understand why.\n          // see https://github.com/sag1v/react-elastic-carousel/issues/107\n          window.requestAnimationFrame(() => {\n            this.onContainerResize(entry);\n          });\n        }\n        if (entry.target === this.slider) {\n          // we are using rAF because it fixes the infinite refresh with gatsby (ssr?).\n          // TBH, I'm not sure i fully understand why\n          // see https://github.com/sag1v/react-elastic-carousel/issues/107\n          window.requestAnimationFrame(() => {\n            this.onSliderResize(entry);\n          });\n        }\n      }\n    });\n\n    this.ro.observe(this.sliderContainer);\n    this.ro.observe(this.slider);\n  };\n\n  unSubscribeObserver = () => this.ro.disconnect();\n\n  setAutoPlay = () => {\n    const { autoPlaySpeed } = this.getDerivedPropsFromBreakPoint();\n    this.autoPlayIntervalId = setInterval(() => {\n      if (this.isComponentMounted) {\n        const { transitioning } = this.state;\n        if (!transitioning) {\n          this.slideNext();\n        }\n      }\n    }, autoPlaySpeed);\n  };\n\n  removeAutoPlay = () => {\n    if (this.autoPlayIntervalId) {\n      clearInterval(this.autoPlayIntervalId);\n      this.autoPlayIntervalId = null;\n    }\n  };\n\n  setPages = () => {\n    const numOfPages = this.getNumOfPages();\n    const pages = numberToArray(numOfPages);\n    this.setState({ pages });\n  };\n\n  onSliderTransitionEnd = fn => {\n    this.slider.addEventListener(\"transitionend\", fn);\n  };\n\n  removeSliderTransitionHook = fn => {\n    this.slider.removeEventListener(\"transitionend\", fn);\n  };\n\n  getDerivedPropsFromBreakPoint = () => {\n    const { breakPoints, ...restOfProps } = this.props;\n    const { sliderContainerWidth } = this.state;\n\n    // default breakpoint from individual props\n    let currentBreakPoint;\n    // if breakpoints were added as props override the individual props\n    if (breakPoints && breakPoints.length > 0) {\n      currentBreakPoint = breakPoints\n        .slice() // no mutations\n        .reverse() // so we can find last match\n        .find(bp => bp.width <= sliderContainerWidth);\n      if (!currentBreakPoint) {\n        /* in case we don't have a lower width than sliderContainerWidth\n         * this mostly happens in initilization when sliderContainerWidth is 0\n         */\n        currentBreakPoint = breakPoints[0];\n      }\n    }\n    // merge direct props with current breakpoint Props\n    return { ...restOfProps, ...currentBreakPoint };\n  };\n\n  updateSliderPosition = () => {\n    this.setState(state => {\n      const {\n        children,\n        verticalMode,\n        itemsToShow,\n        transitionMs\n      } = this.getDerivedPropsFromBreakPoint();\n      const { childHeight, activeIndex } = state;\n\n      const childWidth = this.calculateChildWidth();\n      const totalItems = Children.toArray(children).length;\n      const hiddenSlots = totalItems - itemsToShow;\n      let moveBy = activeIndex * -1;\n      const emptySlots = itemsToShow - (totalItems - activeIndex);\n      if (emptySlots > 0 && hiddenSlots > 0) {\n        moveBy = emptySlots + activeIndex * -1;\n      }\n      let sliderPosition = (verticalMode ? childHeight : childWidth) * moveBy;\n      const newActiveIndex =\n        emptySlots > 0 ? activeIndex - emptySlots : activeIndex;\n      // go back from 0ms to whatever set by the user\n      // We were at 0ms because we wanted to disable animation on resize\n      // see https://github.com/sag1v/react-elastic-carousel/issues/94\n      window.requestAnimationFrame(() => {\n        if (this.isComponentMounted) {\n          this.setState({ transitionMs });\n        }\n      });\n      return {\n        sliderPosition,\n        activeIndex: newActiveIndex < 0 ? 0 : newActiveIndex\n      };\n    });\n  };\n\n  onSliderResize = sliderNode => {\n    if (!this.isComponentMounted) {\n      return;\n    }\n\n    const {\n      verticalMode,\n      children,\n      itemsToShow\n    } = this.getDerivedPropsFromBreakPoint();\n    const { height: sliderHeight } = sliderNode.contentRect;\n    const nextState = {};\n    const childrenLength = Children.toArray(children).length;\n    if (verticalMode) {\n      const childHeight = sliderHeight / childrenLength;\n      // We use Math.min because we don't want to make the child smaller\n      // if the number of children is smaller than itemsToShow.\n      // (Because we do not want \"empty slots\")\n      nextState.rootHeight =\n        childHeight * Math.min(childrenLength, itemsToShow);\n      nextState.childHeight = childHeight;\n    } else {\n      nextState.rootHeight = sliderHeight;\n    }\n    this.setState(nextState);\n  };\n\n  calculateChildWidth = () => {\n    const { sliderContainerWidth } = this.state;\n    const {\n      verticalMode,\n      itemsToShow,\n      showEmptySlots,\n      children\n    } = this.getDerivedPropsFromBreakPoint();\n\n    /* based on slider container's width, get num of items to show\n        * and calculate child's width (and update it in state)\n        */\n    const childrenLength = Children.toArray(children).length || 1;\n\n    let childWidth = 0;\n    if (verticalMode) {\n      childWidth = sliderContainerWidth;\n    } else {\n      // When \"showEmptySlots\" is false\n      // We use Math.min because we don't want to make the child smaller\n      // if the number of children is smaller than itemsToShow.\n      // (Because we do not want \"empty slots\")\n      childWidth =\n        sliderContainerWidth /\n        (showEmptySlots ? itemsToShow : Math.min(childrenLength, itemsToShow));\n    }\n    return childWidth;\n  };\n\n  onContainerResize = sliderContainerNode => {\n    const { width: newSliderContainerWidth } = sliderContainerNode.contentRect;\n    // update slider container width\n    // disable animation on resize see https://github.com/sag1v/react-elastic-carousel/issues/94\n    const {\n      outerSpacing,\n      verticalMode: initialVerticalMode\n    } = this.getDerivedPropsFromBreakPoint();\n    const containerWidth =\n      newSliderContainerWidth - (initialVerticalMode ? 0 : outerSpacing * 2);\n\n    if (\n      !this.isComponentMounted ||\n      this.state.sliderContainerWidth === newSliderContainerWidth\n    ) {\n      // prevent infinite loop\n      return;\n    }\n    this.setState(\n      { sliderContainerWidth: containerWidth, transitionMs: 0 },\n      () => {\n        // we must get these props inside setState (get future props because its async)\n        const {\n          onResize,\n          itemsToShow,\n          children\n        } = this.getDerivedPropsFromBreakPoint();\n\n        const childrenLength = Children.toArray(children).length || 1;\n\n        this.setState(\n          currentState => {\n            // We might need to change the selected index when the size of the container changes\n            // we are making sure the selected index is not out of boundaries and respecting itemsToShow\n            // This usually happens with breakpoints. see https://github.com/sag1v/react-elastic-carousel/issues/122\n            let activeIndex = currentState.activeIndex;\n            // we take the lowest, in case itemsToShow is greater than childrenLength\n            const maxItemsToShow = Math.min(childrenLength, itemsToShow);\n            const endLimit = childrenLength - maxItemsToShow;\n            if (activeIndex > endLimit) {\n              activeIndex = endLimit;\n            }\n\n            return { activeIndex };\n          },\n          () => {\n            /* Based on all of the above new data:\n            * update slider position\n            * get the new current breakpoint\n            * pass the current breakpoint to the consumer's callback\n            */\n            this.updateSliderPosition();\n            const currentBreakPoint = this.getDerivedPropsFromBreakPoint();\n            onResize(currentBreakPoint);\n          }\n        );\n      }\n    );\n  };\n\n  tiltMovement = (position, distance = 20, duration = 150) => {\n    this.setState(state => {\n      return {\n        isSwiping: true,\n        swipedSliderPosition: position - distance\n      };\n    });\n    setTimeout(() => {\n      this.setState({\n        isSwiping: false,\n        swipedSliderPosition: 0\n      });\n    }, duration);\n  };\n\n  convertChildToCbObj = index => {\n    const { children } = this.getDerivedPropsFromBreakPoint();\n    // support decimal itemsToShow\n    const roundedIdx = Math.round(index);\n    const child = Children.toArray(children)[roundedIdx];\n    return { item: child.props, index: roundedIdx };\n  };\n\n  getNextItemIndex = (currentIndex, getPrev) => {\n    const {\n      children,\n      itemsToShow,\n      itemsToScroll\n    } = this.getDerivedPropsFromBreakPoint();\n    const childrenLength = Children.toArray(children).length || 1;\n    const notEnoughItemsToShow = itemsToShow > childrenLength;\n    let limit = getPrev ? 0 : childrenLength - itemsToShow;\n\n    if (notEnoughItemsToShow) {\n      limit = 0; // basically don't move\n    }\n    const nextAction = getPrev\n      ? prevItemAction(0, itemsToScroll)\n      : nextItemAction(limit, itemsToScroll);\n    const nextItem = activeIndexReducer(currentIndex, nextAction);\n    return nextItem;\n  };\n\n  getNextItemObj = getPrev => {\n    const { children } = this.getDerivedPropsFromBreakPoint();\n    const { activeIndex } = this.state;\n    const nextItemIndex = this.getNextItemIndex(activeIndex, getPrev);\n    // support decimal itemsToShow\n    const roundedIdx = Math.round(nextItemIndex);\n    const asElement = Children.toArray(children)[roundedIdx];\n    const asObj = { item: asElement.props, index: roundedIdx };\n    return asObj;\n  };\n\n  resetSwipe = () => {\n    this.setState({\n      swipedSliderPosition: 0,\n      transitioning: false,\n      isSwiping: false\n    });\n  };\n\n  onSwiping = data => {\n    const { deltaX, absX, deltaY, absY, dir } = data;\n\n    this.setState(state => {\n      const { childHeight, activeIndex, sliderPosition } = state;\n      const {\n        itemsToShow,\n        verticalMode,\n        children,\n        isRTL\n      } = this.getDerivedPropsFromBreakPoint();\n\n      const childWidth = this.calculateChildWidth();\n\n      // determine how far can user swipe\n      const childrenLength = Children.toArray(children).length || 1;\n      const goingNext =\n        (!verticalMode && dir === \"Left\" && !isRTL) ||\n        (!verticalMode && dir === \"Right\" && isRTL) ||\n        (verticalMode && dir === \"Up\");\n      const goingBack =\n        (!verticalMode && dir === \"Right\" && !isRTL) ||\n        (!verticalMode && dir === \"Left\" && isRTL) ||\n        (verticalMode && dir === \"Down\");\n\n      const horizontalSwipe = dir === \"Left\" || dir === \"Right\";\n      const verticalSwipe = dir === \"Up\" || dir === \"Down\";\n      const horizontalMode = !verticalMode;\n\n      let distanceSwipe = 0;\n      const horizontalEdgeStoppage = childWidth / 2;\n      const verticalEdgeStoppage = childHeight / 2;\n\n      if (verticalMode) {\n        if (verticalSwipe) {\n          const trackSize = childrenLength * childHeight;\n          if (goingNext) {\n            distanceSwipe =\n              trackSize -\n              childHeight * activeIndex -\n              itemsToShow * childHeight +\n              verticalEdgeStoppage;\n          } else if (goingBack) {\n            distanceSwipe = childHeight * activeIndex + verticalEdgeStoppage;\n          }\n        }\n      } else {\n        if (horizontalSwipe) {\n          const trackSize = childrenLength * childWidth;\n          if (goingNext) {\n            distanceSwipe =\n              trackSize -\n              childWidth * activeIndex -\n              itemsToShow * childWidth +\n              horizontalEdgeStoppage;\n          } else if (goingBack) {\n            distanceSwipe = childWidth * activeIndex + horizontalEdgeStoppage;\n          }\n        }\n      }\n\n      const shouldHorizontalSkipUpdate =\n        (horizontalMode && verticalSwipe) ||\n        (horizontalMode && horizontalSwipe && absX > distanceSwipe);\n\n      const shouldVerticalSkipUpdate =\n        (verticalMode && horizontalSwipe) ||\n        (verticalMode && verticalSwipe && absY > distanceSwipe);\n\n      if (shouldHorizontalSkipUpdate || shouldVerticalSkipUpdate) {\n        // bail out of state update\n        return;\n      }\n      let swipedSliderPosition;\n      if (horizontalSwipe) {\n        if (isRTL) {\n          swipedSliderPosition = sliderPosition + deltaX;\n        } else {\n          swipedSliderPosition = sliderPosition - deltaX;\n        }\n      } else {\n        swipedSliderPosition = sliderPosition - deltaY;\n      }\n      return {\n        swipedSliderPosition,\n        isSwiping: true,\n        transitioning: true\n      };\n    });\n  };\n\n  onSwiped = data => {\n    // we need to handle all scenarios:\n    // 1. Horizontal mode - swipe left or right\n    // 2. Horizontal mode with RTL - swipe left or right\n    // 3. vertical mode - swipe up or down\n\n    const { absX, absY, dir } = data;\n    const { childHeight, activeIndex } = this.state;\n    const {\n      verticalMode,\n      isRTL,\n      itemsToScroll\n    } = this.getDerivedPropsFromBreakPoint();\n    const childWidth = this.calculateChildWidth();\n\n    let func = this.resetSwipe;\n    const minSwipeDistanceHorizontal = childWidth / 5;\n    const minSwipeDistanceVertical = childHeight / 5;\n    const swipedLeft = dir === \"Left\";\n    const swipedRight = dir === \"Right\";\n    const swipedUp = dir === \"Up\";\n    const swipedDown = dir === \"Down\";\n    const verticalGoSwipe =\n      verticalMode &&\n      (swipedUp || swipedDown) &&\n      absY > minSwipeDistanceVertical;\n\n    const horizontalGoSwipe =\n      !verticalMode &&\n      (swipedRight || swipedLeft) &&\n      absX > minSwipeDistanceHorizontal;\n\n    let goodToGo = false;\n    if (verticalGoSwipe || horizontalGoSwipe) {\n      goodToGo = true;\n    }\n\n    if (goodToGo) {\n      // we should go to a different item\n      // determine what method we need to invoke\n\n      if (verticalMode) {\n        // get number of slides from user's swiping\n        const numberOfSlidesViaSwipe = Math.ceil(\n          (absY - minSwipeDistanceVertical) / childHeight\n        );\n        // if user swipes more than itemsToScroll then we want to bypass itemsToScroll for a smoother scroll\n        const numberOfSlidesTogo = Math.max(\n          itemsToScroll,\n          numberOfSlidesViaSwipe\n        );\n\n        const backSlidesToGo = activeIndex - numberOfSlidesTogo;\n        const forwardSlideTtoGo = activeIndex + numberOfSlidesTogo;\n\n        // up or down\n        if (swipedDown) {\n          // func = this.onPrevStart;\n          func = () => this.goTo(backSlidesToGo);\n        }\n        if (swipedUp) {\n          // func = this.onNextStart;\n          func = () => this.goTo(forwardSlideTtoGo);\n        }\n      } else {\n        // get number of slides from user's swiping\n        const numberOfSlidesViaSwipe = Math.ceil(\n          (absX - minSwipeDistanceHorizontal) / childWidth\n        );\n        // if user swipes more than itemsToScroll then we want to bypass itemsToScroll for a smoother scroll\n        const numberOfSlidesTogo = Math.max(\n          itemsToScroll,\n          numberOfSlidesViaSwipe\n        );\n\n        const backSlidesToGo = activeIndex - numberOfSlidesTogo;\n        const forwardSlideTtoGo = activeIndex + numberOfSlidesTogo;\n\n        // horizontal mode\n        if (isRTL) {\n          // flip sides\n          if (swipedLeft) {\n            // func = this.onPrevStart;\n            func = () => this.goTo(backSlidesToGo);\n          }\n          if (swipedRight) {\n            // func = this.onNextStart;\n            func = () => this.goTo(forwardSlideTtoGo);\n          }\n        } else {\n          // normal behavior\n          if (swipedLeft) {\n            // func = this.onNextStart;\n            func = () => this.goTo(forwardSlideTtoGo);\n          }\n          if (swipedRight) {\n            // func = this.onPrevStart;\n            func = () => this.goTo(backSlidesToGo);\n          }\n        }\n      }\n    }\n    // we are not \"tilting\" on edges, so we need to reset isSwiping and transitioning.\n    // otherwise we wont slide back to edge\n    this.setState({ isSwiping: false, transitioning: false });\n    func({ skipTilt: true });\n  };\n\n  onNextStart = options => {\n    const { onNextStart } = this.getDerivedPropsFromBreakPoint();\n    const { activeIndex } = this.state;\n    const nextItemObj = this.getNextItemObj();\n    const prevItemObj = this.convertChildToCbObj(activeIndex);\n    onNextStart(prevItemObj, nextItemObj);\n    this.slideNext(options);\n  };\n\n  onPrevStart = options => {\n    const { onPrevStart } = this.getDerivedPropsFromBreakPoint();\n    const { activeIndex } = this.state;\n    const nextItemObj = this.getNextItemObj(true);\n    const prevItemObj = this.convertChildToCbObj(activeIndex);\n    onPrevStart(prevItemObj, nextItemObj);\n    this.slidePrev(options);\n  };\n\n  slideNext = (options = {}) => {\n    const { skipTilt } = options;\n    const { enableTilt } = this.getDerivedPropsFromBreakPoint();\n    const { activeIndex, sliderPosition } = this.state;\n    const nextItem = this.getNextItemIndex(activeIndex, false);\n    if (activeIndex !== nextItem) {\n      this.goTo(nextItem);\n    } else if (enableTilt && !skipTilt) {\n      this.tiltMovement(sliderPosition, 20, 150);\n    }\n  };\n\n  slidePrev = (options = {}) => {\n    const { skipTilt } = options;\n    const { activeIndex } = this.state;\n    const { enableTilt } = this.getDerivedPropsFromBreakPoint();\n    const prevItem = this.getNextItemIndex(activeIndex, true);\n    if (activeIndex !== prevItem) {\n      this.goTo(prevItem);\n    } else if (enableTilt && !skipTilt) {\n      this.tiltMovement(0, -20, 150);\n    }\n  };\n\n  onNextEnd = () => {\n    const { onNextEnd, onChange } = this.getDerivedPropsFromBreakPoint();\n    const { activeIndex, activePage } = this.state;\n    const nextItemObj = this.convertChildToCbObj(activeIndex);\n    this.removeSliderTransitionHook(this.onNextEnd);\n    this.setState({ transitioning: false });\n    onChange && onChange(nextItemObj, activePage);\n    onNextEnd(nextItemObj, activePage);\n  };\n\n  onPrevEnd = () => {\n    const { onPrevEnd, onChange } = this.getDerivedPropsFromBreakPoint();\n    const { activeIndex, activePage } = this.state;\n    const nextItemObj = this.convertChildToCbObj(activeIndex);\n    this.removeSliderTransitionHook(this.onPrevEnd);\n    this.setState({ transitioning: false });\n    onChange && onChange(nextItemObj, activePage);\n    onPrevEnd(nextItemObj, activePage);\n  };\n\n  generatePositionUpdater = (\n    direction,\n    nextItemId,\n    verticalMode,\n    rest\n  ) => state => {\n    const { sliderPosition, childHeight, activeIndex } = state;\n    const childWidth = this.calculateChildWidth();\n\n    let newSliderPosition = 0;\n    const childSize = verticalMode ? childHeight : childWidth;\n    if (direction === consts.NEXT) {\n      newSliderPosition =\n        sliderPosition - childSize * (nextItemId - activeIndex);\n    } else {\n      newSliderPosition =\n        sliderPosition + childSize * (activeIndex - nextItemId);\n    }\n\n    return {\n      sliderPosition: newSliderPosition,\n      activeIndex: nextItemId,\n      swipedSliderPosition: 0,\n      isSwiping: false,\n      ...rest\n    };\n  };\n\n  goTo = nextItemId => {\n    const {\n      children,\n      verticalMode,\n      itemsToShow\n    } = this.getDerivedPropsFromBreakPoint();\n    const { activeIndex } = this.state;\n    const childrenLength = Children.toArray(children).length;\n    let safeNextItemId = Math.max(0, nextItemId); // don't allow negative numbers\n    const isPrev = activeIndex > safeNextItemId;\n    const nextAvailableItem = this.getNextItemIndex(activeIndex, isPrev);\n    const noChange = nextAvailableItem === activeIndex;\n    const outOfBoundary = safeNextItemId + itemsToShow >= childrenLength;\n    if (noChange) {\n      return;\n    }\n    if (outOfBoundary) {\n      // Either go to last index (respect itemsToShow) or 0 index if we can't fill the slider\n      safeNextItemId = Math.max(0, childrenLength - itemsToShow);\n    }\n    let direction = consts.NEXT;\n    let positionEndCb = this.onNextEnd;\n    if (isPrev) {\n      direction = consts.PREV;\n      positionEndCb = this.onPrevEnd;\n    }\n    const stateUpdater = this.generatePositionUpdater(\n      direction,\n      safeNextItemId,\n      verticalMode,\n      {\n        transitioning: true\n      }\n    );\n    this.setState(stateUpdater, () => {\n      // callback\n      pipe(\n        this.updateActivePage(),\n        this.onSliderTransitionEnd(positionEndCb)\n      );\n    });\n  };\n\n  getNumOfPages = () => {\n    const { children, itemsToShow } = this.getDerivedPropsFromBreakPoint();\n    const childrenLength = Children.toArray(children).length;\n    const safeItemsToShow = Math.max(itemsToShow, 1);\n    const numOfPages = Math.ceil(childrenLength / safeItemsToShow);\n    return numOfPages || 1;\n  };\n\n  updateActivePage = () => {\n    this.setState(state => {\n      const { itemsToShow, children } = this.getDerivedPropsFromBreakPoint();\n      const { activeIndex, activePage } = state;\n      const numOfPages = this.getNumOfPages();\n      const childrenLength = Children.toArray(children).length;\n      const inRangeItemsToShow = Math.min(childrenLength, itemsToShow);\n      // watch out from 0 (so we wont divide by zero)\n      const safeItemsToShow = Math.max(inRangeItemsToShow, 1);\n      const newActivePage = Math.ceil(activeIndex / safeItemsToShow);\n      const inRangeActivePageIndex = Math.min(numOfPages - 1, newActivePage);\n      if (activePage !== inRangeActivePageIndex) {\n        return { activePage: inRangeActivePageIndex };\n      }\n    });\n  };\n\n  onIndicatorClick = indicatorId => {\n    const { itemsToShow } = this.getDerivedPropsFromBreakPoint();\n    const gotoIndex = indicatorId * itemsToShow;\n    this.setState({ activePage: indicatorId });\n    this.goTo(gotoIndex);\n  };\n\n  render() {\n    const {\n      activePage,\n      isSwiping,\n      sliderPosition,\n      swipedSliderPosition,\n      rootHeight,\n      pages,\n      activeIndex,\n      transitionMs\n    } = this.state;\n    const {\n      className,\n      style,\n      itemsToShow,\n      itemsToScroll,\n      verticalMode,\n      isRTL,\n      easing,\n      tiltEasing,\n      children,\n      focusOnSelect,\n      autoTabIndexVisibleItems,\n      itemPosition,\n      itemPadding,\n      outerSpacing,\n      enableSwipe,\n      enableMouseSwipe,\n      pagination,\n      showArrows,\n      disableArrowsOnEnd,\n      preventDefaultTouchmoveEvent,\n      renderArrow,\n      renderPagination\n    } = this.getDerivedPropsFromBreakPoint();\n\n    const childWidth = this.calculateChildWidth();\n\n    const numOfPages = this.getNumOfPages();\n\n    /** Determine if arrows should be disabled */\n    const canSlidePrev =\n      activeIndex !== this.getNextItemIndex(activeIndex, true);\n    const canSlideNext =\n      activeIndex !== this.getNextItemIndex(activeIndex, false);\n    const disabledPrevArrow = !canSlidePrev && disableArrowsOnEnd;\n    const disabledNextArrow = !canSlideNext && disableArrowsOnEnd;\n\n    return (\n      <CarouselWrapper\n        isRTL={isRTL}\n        className={`${cssPrefix(\"carousel-wrapper\")} ${className}`}\n        style={style}\n      >\n        <StyledCarousel\n          className={cssPrefix(\"carousel\")}\n          size={{ height: rootHeight }}\n        >\n          <Only when={showArrows}>\n            {renderArrow ? (\n              renderArrow({\n                type: consts.PREV,\n                onClick: this.onPrevStart,\n                isEdge: !canSlidePrev\n              })\n            ) : (\n              <Arrow\n                onClick={this.onPrevStart}\n                direction={verticalMode ? Arrow.up : Arrow.left}\n                disabled={disabledPrevArrow}\n              />\n            )}\n          </Only>\n          <SliderContainer\n            className={cssPrefix(\"slider-container\")}\n            ref={this.setRef(\"sliderContainer\")}\n          >\n            <Slider\n              verticalMode={verticalMode}\n              isRTL={isRTL}\n              easing={easing}\n              sliderPosition={sliderPosition}\n              swipedSliderPosition={swipedSliderPosition}\n              isSwiping={isSwiping}\n              transitionMs={transitionMs}\n              tiltEasing={tiltEasing}\n              className={cssPrefix(\"slider\")}\n              ref={this.setRef(\"slider\")}\n              outerSpacing={outerSpacing}\n            >\n              <Track\n                verticalMode={verticalMode}\n                children={Children.toArray(children)}\n                childWidth={childWidth}\n                currentItem={activeIndex}\n                autoTabIndexVisibleItems={autoTabIndexVisibleItems}\n                itemsToShow={itemsToShow}\n                itemsToScroll={itemsToScroll}\n                itemPosition={itemPosition}\n                itemPadding={itemPadding}\n                enableSwipe={enableSwipe}\n                enableMouseSwipe={enableMouseSwipe}\n                preventDefaultTouchmoveEvent={preventDefaultTouchmoveEvent}\n                onSwiped={this.onSwiped}\n                onSwiping={this.onSwiping}\n                onItemClick={focusOnSelect ? this.goTo : undefined}\n              />\n            </Slider>\n          </SliderContainer>\n          <Only when={showArrows}>\n            {renderArrow ? (\n              renderArrow({\n                type: consts.NEXT,\n                onClick: this.onNextStart,\n                isEdge: !canSlideNext\n              })\n            ) : (\n              <Arrow\n                onClick={this.onNextStart}\n                direction={verticalMode ? Arrow.down : Arrow.right}\n                disabled={disabledNextArrow}\n              />\n            )}\n          </Only>\n        </StyledCarousel>\n        <Only when={pagination}>\n          {renderPagination ? (\n            renderPagination({\n              pages: pages,\n              activePage,\n              onClick: this.onIndicatorClick\n            })\n          ) : (\n            <Pagination\n              numOfPages={numOfPages}\n              activePage={activePage}\n              onClick={this.onIndicatorClick}\n            />\n          )}\n        </Only>\n      </CarouselWrapper>\n    );\n  }\n}\n\nCarousel.defaultProps = {\n  className: \"\",\n  style: {},\n  verticalMode: false,\n  isRTL: false,\n  initialFirstItem: 0,\n  initialActiveIndex: 0,\n  showArrows: true,\n  showEmptySlots: false,\n  disableArrowsOnEnd: true,\n  pagination: true,\n  easing: \"ease\",\n  tiltEasing: \"ease\",\n  transitionMs: 500,\n  enableTilt: true,\n  enableSwipe: true,\n  enableMouseSwipe: true,\n  preventDefaultTouchmoveEvent: false,\n  focusOnSelect: false,\n  autoTabIndexVisibleItems: true,\n  itemsToShow: 1,\n  itemsToScroll: 1,\n  itemPosition: consts.CENTER,\n  itemPadding: [0, 0, 0, 0],\n  outerSpacing: 0,\n  enableAutoPlay: false,\n  autoPlaySpeed: 2000,\n\n  // callbacks\n  onChange: noop,\n  onNextEnd: noop,\n  onPrevEnd: noop,\n  onNextStart: noop,\n  onPrevStart: noop,\n  onResize: noop\n};\n\nCarousel.propTypes = {\n  /** Items to render */\n  children: PropTypes.node.isRequired,\n\n  /** The css class for the root element */\n  className: PropTypes.string,\n\n  /** The style object for the root element */\n  style: PropTypes.object,\n\n  /** Display the Carousel in a vertical layout */\n  verticalMode: PropTypes.bool,\n\n  /** Flip right to left */\n  isRTL: PropTypes.bool,\n\n  /** Show dots for paging */\n  pagination: PropTypes.bool,\n\n  /** Animation speed */\n  transitionMs: PropTypes.number,\n\n  /** transition easing pattern */\n  easing: PropTypes.string,\n\n  /** transition easing pattern for the tilt */\n  tiltEasing: PropTypes.string,\n\n  /** The \"bump\" animation when reaching the last item */\n  enableTilt: PropTypes.bool,\n\n  /** Number of visible items  */\n  itemsToShow: PropTypes.number,\n\n  /** Number of items to scroll */\n  itemsToScroll: PropTypes.number,\n\n  /** Collection of objects with a width, itemsToShow and itemsToScroll  */\n  breakPoints: PropTypes.arrayOf(\n    PropTypes.shape({\n      width: PropTypes.number.isRequired,\n      itemsToShow: PropTypes.number,\n      itemsToScroll: PropTypes.number\n    })\n  ),\n\n  /** The initial active index when the component mounts */\n  initialActiveIndex: PropTypes.number,\n\n  /** **DEPRECATED - use initialActiveIndex instead** The first items when the component mounts */\n  initialFirstItem: PropTypes.number,\n\n  /** Show the arrow buttons */\n  showArrows: PropTypes.bool,\n\n  /** Show empty slots when children.length < itemsToShow (not compatible with verticalMode yet !) */\n  showEmptySlots: PropTypes.bool,\n\n  /** Disables the arrow button when there are no more items */\n  disableArrowsOnEnd: PropTypes.bool,\n\n  /** Go to item on click */\n  focusOnSelect: PropTypes.bool,\n\n  /** Automatically inject `tabIndex:0` to visible items */\n  autoTabIndexVisibleItems: PropTypes.bool,\n\n  /** A render prop for the arrow component\n   * - ({type, onClick}) => <div onClick={onClick}>{type === 'prev' ? '<-' : '->'}</div>\n   */\n  renderArrow: PropTypes.func,\n\n  /** A render prop for the pagination component\n   * - ({ pages, activePage, onClick }) =>  <YourComponent/>\n   */\n  renderPagination: PropTypes.func,\n\n  /** Position the element relative to it's wrapper (use the consts object) - consts.START | consts.CENTER | consts.END */\n  itemPosition: PropTypes.oneOf([consts.START, consts.CENTER, consts.END]),\n\n  /** A padding for each element  */\n  itemPadding: PropTypes.array,\n\n  /** A margin at the beginning and at the end of the carousel (not compatible with verticalMode yet !) */\n  outerSpacing: PropTypes.number,\n\n  // swipe\n  /** Enable or disable swipe */\n  enableSwipe: PropTypes.bool,\n\n  /** Enable or disable mouse swipe */\n  enableMouseSwipe: PropTypes.bool,\n\n  /** Prevent page scroll on touchmove.\n   * Use this to stop the browser from scrolling while a user swipes.\n   * More details: https://github.com/FormidableLabs/react-swipeable#preventdefaulttouchmoveevent-details\n   */\n  preventDefaultTouchmoveEvent: PropTypes.bool,\n\n  // auto play\n  /** Enable or disable auto play */\n  enableAutoPlay: PropTypes.bool,\n\n  /** Set auto play speed (ms) */\n  autoPlaySpeed: PropTypes.number,\n\n  // callbacks\n  /** A callback for the change of an item\n   * - onChange(currentItemObject, currentPageIndex) => {} */\n  onChange: PropTypes.func,\n\n  /** A callback for the beginning of the next transition\n   * - onNextStart(prevItemObject, nextItemObject) => {} */\n  onNextStart: PropTypes.func,\n\n  /** A callback for the beginning of the prev transition\n   * - onPrevStart(prevItemObject, nextItemObject) => {} */\n  onPrevStart: PropTypes.func,\n\n  /** A callback for the end of the next transition\n   * - onNextEnd(nextItemObject, currentPageIndex) => {} */\n  onNextEnd: PropTypes.func,\n\n  /** A callback for the end of the prev transition\n   * - onPrevEnd(nextItemObject, currentPageIndex) => {} */\n  onPrevEnd: PropTypes.func,\n\n  /** A callback for the \"slider-container\" resize\n   * - onResize(currentBreakPoint) => {} */\n  onResize: PropTypes.func\n};\n\nexport default Carousel;\n","/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\n/* eslint-disable require-jsdoc, valid-jsdoc */\nvar MapShim = (function () {\n    if (typeof Map !== 'undefined') {\n        return Map;\n    }\n\n    /**\r\n     * Returns index in provided array that matches the specified key.\r\n     *\r\n     * @param {Array<Array>} arr\r\n     * @param {*} key\r\n     * @returns {number}\r\n     */\n    function getIndex(arr, key) {\n        var result = -1;\n\n        arr.some(function (entry, index) {\n            if (entry[0] === key) {\n                result = index;\n\n                return true;\n            }\n\n            return false;\n        });\n\n        return result;\n    }\n\n    return (function () {\n        function anonymous() {\n            this.__entries__ = [];\n        }\n\n        var prototypeAccessors = { size: { configurable: true } };\n\n        /**\r\n         * @returns {boolean}\r\n         */\n        prototypeAccessors.size.get = function () {\n            return this.__entries__.length;\n        };\n\n        /**\r\n         * @param {*} key\r\n         * @returns {*}\r\n         */\n        anonymous.prototype.get = function (key) {\n            var index = getIndex(this.__entries__, key);\n            var entry = this.__entries__[index];\n\n            return entry && entry[1];\n        };\n\n        /**\r\n         * @param {*} key\r\n         * @param {*} value\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.set = function (key, value) {\n            var index = getIndex(this.__entries__, key);\n\n            if (~index) {\n                this.__entries__[index][1] = value;\n            } else {\n                this.__entries__.push([key, value]);\n            }\n        };\n\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.delete = function (key) {\n            var entries = this.__entries__;\n            var index = getIndex(entries, key);\n\n            if (~index) {\n                entries.splice(index, 1);\n            }\n        };\n\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.has = function (key) {\n            return !!~getIndex(this.__entries__, key);\n        };\n\n        /**\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.clear = function () {\n            this.__entries__.splice(0);\n        };\n\n        /**\r\n         * @param {Function} callback\r\n         * @param {*} [ctx=null]\r\n         * @returns {void}\r\n         */\n        anonymous.prototype.forEach = function (callback, ctx) {\n            var this$1 = this;\n            if ( ctx === void 0 ) ctx = null;\n\n            for (var i = 0, list = this$1.__entries__; i < list.length; i += 1) {\n                var entry = list[i];\n\n                callback.call(ctx, entry[1], entry[0]);\n            }\n        };\n\n        Object.defineProperties( anonymous.prototype, prototypeAccessors );\n\n        return anonymous;\n    }());\n})();\n\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;\n\n// Returns global object of a current environment.\nvar global$1 = (function () {\n    if (typeof global !== 'undefined' && global.Math === Math) {\n        return global;\n    }\n\n    if (typeof self !== 'undefined' && self.Math === Math) {\n        return self;\n    }\n\n    if (typeof window !== 'undefined' && window.Math === Math) {\n        return window;\n    }\n\n    // eslint-disable-next-line no-new-func\n    return Function('return this')();\n})();\n\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\nvar requestAnimationFrame$1 = (function () {\n    if (typeof requestAnimationFrame === 'function') {\n        // It's required to use a bounded function because IE sometimes throws\n        // an \"Invalid calling object\" error if rAF is invoked without the global\n        // object on the left hand side.\n        return requestAnimationFrame.bind(global$1);\n    }\n\n    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\n})();\n\n// Defines minimum timeout before adding a trailing call.\nvar trailingTimeout = 2;\n\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\nvar throttle = function (callback, delay) {\n    var leadingCall = false,\n        trailingCall = false,\n        lastCallTime = 0;\n\n    /**\r\n     * Invokes the original callback function and schedules new invocation if\r\n     * the \"proxy\" was called during current request.\r\n     *\r\n     * @returns {void}\r\n     */\n    function resolvePending() {\n        if (leadingCall) {\n            leadingCall = false;\n\n            callback();\n        }\n\n        if (trailingCall) {\n            proxy();\n        }\n    }\n\n    /**\r\n     * Callback invoked after the specified delay. It will further postpone\r\n     * invocation of the original function delegating it to the\r\n     * requestAnimationFrame.\r\n     *\r\n     * @returns {void}\r\n     */\n    function timeoutCallback() {\n        requestAnimationFrame$1(resolvePending);\n    }\n\n    /**\r\n     * Schedules invocation of the original function.\r\n     *\r\n     * @returns {void}\r\n     */\n    function proxy() {\n        var timeStamp = Date.now();\n\n        if (leadingCall) {\n            // Reject immediately following calls.\n            if (timeStamp - lastCallTime < trailingTimeout) {\n                return;\n            }\n\n            // Schedule new call to be in invoked when the pending one is resolved.\n            // This is important for \"transitions\" which never actually start\n            // immediately so there is a chance that we might miss one if change\n            // happens amids the pending invocation.\n            trailingCall = true;\n        } else {\n            leadingCall = true;\n            trailingCall = false;\n\n            setTimeout(timeoutCallback, delay);\n        }\n\n        lastCallTime = timeStamp;\n    }\n\n    return proxy;\n};\n\n// Minimum delay before invoking the update of observers.\nvar REFRESH_DELAY = 20;\n\n// A list of substrings of CSS properties used to find transition events that\n// might affect dimensions of observed elements.\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\n\n// Check if MutationObserver is available.\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\n\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\nvar ResizeObserverController = function() {\n    this.connected_ = false;\n    this.mutationEventsAdded_ = false;\n    this.mutationsObserver_ = null;\n    this.observers_ = [];\n\n    this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\n    this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\n};\n\n/**\r\n * Adds observer to observers list.\r\n *\r\n * @param {ResizeObserverSPI} observer - Observer to be added.\r\n * @returns {void}\r\n */\n\n\n/**\r\n * Holds reference to the controller's instance.\r\n *\r\n * @private {ResizeObserverController}\r\n */\n\n\n/**\r\n * Keeps reference to the instance of MutationObserver.\r\n *\r\n * @private {MutationObserver}\r\n */\n\n/**\r\n * Indicates whether DOM listeners have been added.\r\n *\r\n * @private {boolean}\r\n */\nResizeObserverController.prototype.addObserver = function (observer) {\n    if (!~this.observers_.indexOf(observer)) {\n        this.observers_.push(observer);\n    }\n\n    // Add listeners if they haven't been added yet.\n    if (!this.connected_) {\n        this.connect_();\n    }\n};\n\n/**\r\n * Removes observer from observers list.\r\n *\r\n * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.removeObserver = function (observer) {\n    var observers = this.observers_;\n    var index = observers.indexOf(observer);\n\n    // Remove observer if it's present in registry.\n    if (~index) {\n        observers.splice(index, 1);\n    }\n\n    // Remove listeners if controller has no connected observers.\n    if (!observers.length && this.connected_) {\n        this.disconnect_();\n    }\n};\n\n/**\r\n * Invokes the update of observers. It will continue running updates insofar\r\n * it detects changes.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.refresh = function () {\n    var changesDetected = this.updateObservers_();\n\n    // Continue running updates if changes have been detected as there might\n    // be future ones caused by CSS transitions.\n    if (changesDetected) {\n        this.refresh();\n    }\n};\n\n/**\r\n * Updates every observer from observers list and notifies them of queued\r\n * entries.\r\n *\r\n * @private\r\n * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n *  dimensions of it's elements.\r\n */\nResizeObserverController.prototype.updateObservers_ = function () {\n    // Collect observers that have active observations.\n    var activeObservers = this.observers_.filter(function (observer) {\n        return observer.gatherActive(), observer.hasActive();\n    });\n\n    // Deliver notifications in a separate cycle in order to avoid any\n    // collisions between observers, e.g. when multiple instances of\n    // ResizeObserver are tracking the same element and the callback of one\n    // of them changes content dimensions of the observed target. Sometimes\n    // this may result in notifications being blocked for the rest of observers.\n    activeObservers.forEach(function (observer) { return observer.broadcastActive(); });\n\n    return activeObservers.length > 0;\n};\n\n/**\r\n * Initializes DOM listeners.\r\n *\r\n * @private\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.connect_ = function () {\n    // Do nothing if running in a non-browser environment or if listeners\n    // have been already added.\n    if (!isBrowser || this.connected_) {\n        return;\n    }\n\n    // Subscription to the \"Transitionend\" event is used as a workaround for\n    // delayed transitions. This way it's possible to capture at least the\n    // final state of an element.\n    document.addEventListener('transitionend', this.onTransitionEnd_);\n\n    window.addEventListener('resize', this.refresh);\n\n    if (mutationObserverSupported) {\n        this.mutationsObserver_ = new MutationObserver(this.refresh);\n\n        this.mutationsObserver_.observe(document, {\n            attributes: true,\n            childList: true,\n            characterData: true,\n            subtree: true\n        });\n    } else {\n        document.addEventListener('DOMSubtreeModified', this.refresh);\n\n        this.mutationEventsAdded_ = true;\n    }\n\n    this.connected_ = true;\n};\n\n/**\r\n * Removes DOM listeners.\r\n *\r\n * @private\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.disconnect_ = function () {\n    // Do nothing if running in a non-browser environment or if listeners\n    // have been already removed.\n    if (!isBrowser || !this.connected_) {\n        return;\n    }\n\n    document.removeEventListener('transitionend', this.onTransitionEnd_);\n    window.removeEventListener('resize', this.refresh);\n\n    if (this.mutationsObserver_) {\n        this.mutationsObserver_.disconnect();\n    }\n\n    if (this.mutationEventsAdded_) {\n        document.removeEventListener('DOMSubtreeModified', this.refresh);\n    }\n\n    this.mutationsObserver_ = null;\n    this.mutationEventsAdded_ = false;\n    this.connected_ = false;\n};\n\n/**\r\n * \"Transitionend\" event handler.\r\n *\r\n * @private\r\n * @param {TransitionEvent} event\r\n * @returns {void}\r\n */\nResizeObserverController.prototype.onTransitionEnd_ = function (ref) {\n        var propertyName = ref.propertyName; if ( propertyName === void 0 ) propertyName = '';\n\n    // Detect whether transition may affect dimensions of an element.\n    var isReflowProperty = transitionKeys.some(function (key) {\n        return !!~propertyName.indexOf(key);\n    });\n\n    if (isReflowProperty) {\n        this.refresh();\n    }\n};\n\n/**\r\n * Returns instance of the ResizeObserverController.\r\n *\r\n * @returns {ResizeObserverController}\r\n */\nResizeObserverController.getInstance = function () {\n    if (!this.instance_) {\n        this.instance_ = new ResizeObserverController();\n    }\n\n    return this.instance_;\n};\n\nResizeObserverController.instance_ = null;\n\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\nvar defineConfigurable = (function (target, props) {\n    for (var i = 0, list = Object.keys(props); i < list.length; i += 1) {\n        var key = list[i];\n\n        Object.defineProperty(target, key, {\n            value: props[key],\n            enumerable: false,\n            writable: false,\n            configurable: true\n        });\n    }\n\n    return target;\n});\n\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\nvar getWindowOf = (function (target) {\n    // Assume that the element is an instance of Node, which means that it\n    // has the \"ownerDocument\" property from which we can retrieve a\n    // corresponding global object.\n    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\n\n    // Return the local global object if it's not possible extract one from\n    // provided element.\n    return ownerGlobal || global$1;\n});\n\n// Placeholder of an empty content rectangle.\nvar emptyRect = createRectInit(0, 0, 0, 0);\n\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\nfunction toFloat(value) {\n    return parseFloat(value) || 0;\n}\n\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\nfunction getBordersSize(styles) {\n    var positions = [], len = arguments.length - 1;\n    while ( len-- > 0 ) positions[ len ] = arguments[ len + 1 ];\n\n    return positions.reduce(function (size, position) {\n        var value = styles['border-' + position + '-width'];\n\n        return size + toFloat(value);\n    }, 0);\n}\n\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\nfunction getPaddings(styles) {\n    var positions = ['top', 'right', 'bottom', 'left'];\n    var paddings = {};\n\n    for (var i = 0, list = positions; i < list.length; i += 1) {\n        var position = list[i];\n\n        var value = styles['padding-' + position];\n\n        paddings[position] = toFloat(value);\n    }\n\n    return paddings;\n}\n\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\nfunction getSVGContentRect(target) {\n    var bbox = target.getBBox();\n\n    return createRectInit(0, 0, bbox.width, bbox.height);\n}\n\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\nfunction getHTMLElementContentRect(target) {\n    // Client width & height properties can't be\n    // used exclusively as they provide rounded values.\n    var clientWidth = target.clientWidth;\n    var clientHeight = target.clientHeight;\n\n    // By this condition we can catch all non-replaced inline, hidden and\n    // detached elements. Though elements with width & height properties less\n    // than 0.5 will be discarded as well.\n    //\n    // Without it we would need to implement separate methods for each of\n    // those cases and it's not possible to perform a precise and performance\n    // effective test for hidden elements. E.g. even jQuery's ':visible' filter\n    // gives wrong results for elements with width & height less than 0.5.\n    if (!clientWidth && !clientHeight) {\n        return emptyRect;\n    }\n\n    var styles = getWindowOf(target).getComputedStyle(target);\n    var paddings = getPaddings(styles);\n    var horizPad = paddings.left + paddings.right;\n    var vertPad = paddings.top + paddings.bottom;\n\n    // Computed styles of width & height are being used because they are the\n    // only dimensions available to JS that contain non-rounded values. It could\n    // be possible to utilize the getBoundingClientRect if only it's data wasn't\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\n    var width = toFloat(styles.width),\n        height = toFloat(styles.height);\n\n    // Width & height include paddings and borders when the 'border-box' box\n    // model is applied (except for IE).\n    if (styles.boxSizing === 'border-box') {\n        // Following conditions are required to handle Internet Explorer which\n        // doesn't include paddings and borders to computed CSS dimensions.\n        //\n        // We can say that if CSS dimensions + paddings are equal to the \"client\"\n        // properties then it's either IE, and thus we don't need to subtract\n        // anything, or an element merely doesn't have paddings/borders styles.\n        if (Math.round(width + horizPad) !== clientWidth) {\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\n        }\n\n        if (Math.round(height + vertPad) !== clientHeight) {\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\n        }\n    }\n\n    // Following steps can't be applied to the document's root element as its\n    // client[Width/Height] properties represent viewport area of the window.\n    // Besides, it's as well not necessary as the <html> itself neither has\n    // rendered scroll bars nor it can be clipped.\n    if (!isDocumentElement(target)) {\n        // In some browsers (only in Firefox, actually) CSS width & height\n        // include scroll bars size which can be removed at this step as scroll\n        // bars are the only difference between rounded dimensions + paddings\n        // and \"client\" properties, though that is not always true in Chrome.\n        var vertScrollbar = Math.round(width + horizPad) - clientWidth;\n        var horizScrollbar = Math.round(height + vertPad) - clientHeight;\n\n        // Chrome has a rather weird rounding of \"client\" properties.\n        // E.g. for an element with content width of 314.2px it sometimes gives\n        // the client width of 315px and for the width of 314.7px it may give\n        // 314px. And it doesn't happen all the time. So just ignore this delta\n        // as a non-relevant.\n        if (Math.abs(vertScrollbar) !== 1) {\n            width -= vertScrollbar;\n        }\n\n        if (Math.abs(horizScrollbar) !== 1) {\n            height -= horizScrollbar;\n        }\n    }\n\n    return createRectInit(paddings.left, paddings.top, width, height);\n}\n\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\nvar isSVGGraphicsElement = (function () {\n    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\n    // interface.\n    if (typeof SVGGraphicsElement !== 'undefined') {\n        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };\n    }\n\n    // If it's so, then check that element is at least an instance of the\n    // SVGElement and that it has the \"getBBox\" method.\n    // eslint-disable-next-line no-extra-parens\n    return function (target) { return target instanceof getWindowOf(target).SVGElement && typeof target.getBBox === 'function'; };\n})();\n\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\nfunction isDocumentElement(target) {\n    return target === getWindowOf(target).document.documentElement;\n}\n\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\nfunction getContentRect(target) {\n    if (!isBrowser) {\n        return emptyRect;\n    }\n\n    if (isSVGGraphicsElement(target)) {\n        return getSVGContentRect(target);\n    }\n\n    return getHTMLElementContentRect(target);\n}\n\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\nfunction createReadOnlyRect(ref) {\n    var x = ref.x;\n    var y = ref.y;\n    var width = ref.width;\n    var height = ref.height;\n\n    // If DOMRectReadOnly is available use it as a prototype for the rectangle.\n    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\n    var rect = Object.create(Constr.prototype);\n\n    // Rectangle's properties are not writable and non-enumerable.\n    defineConfigurable(rect, {\n        x: x, y: y, width: width, height: height,\n        top: y,\n        right: x + width,\n        bottom: height + y,\n        left: x\n    });\n\n    return rect;\n}\n\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\nfunction createRectInit(x, y, width, height) {\n    return { x: x, y: y, width: width, height: height };\n}\n\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\nvar ResizeObservation = function(target) {\n    this.broadcastWidth = 0;\n    this.broadcastHeight = 0;\n    this.contentRect_ = createRectInit(0, 0, 0, 0);\n\n    this.target = target;\n};\n\n/**\r\n * Updates content rectangle and tells whether it's width or height properties\r\n * have changed since the last broadcast.\r\n *\r\n * @returns {boolean}\r\n */\n\n\n/**\r\n * Reference to the last observed content rectangle.\r\n *\r\n * @private {DOMRectInit}\r\n */\n\n\n/**\r\n * Broadcasted width of content rectangle.\r\n *\r\n * @type {number}\r\n */\nResizeObservation.prototype.isActive = function () {\n    var rect = getContentRect(this.target);\n\n    this.contentRect_ = rect;\n\n    return rect.width !== this.broadcastWidth || rect.height !== this.broadcastHeight;\n};\n\n/**\r\n * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n * from the corresponding properties of the last observed content rectangle.\r\n *\r\n * @returns {DOMRectInit} Last observed content rectangle.\r\n */\nResizeObservation.prototype.broadcastRect = function () {\n    var rect = this.contentRect_;\n\n    this.broadcastWidth = rect.width;\n    this.broadcastHeight = rect.height;\n\n    return rect;\n};\n\nvar ResizeObserverEntry = function(target, rectInit) {\n    var contentRect = createReadOnlyRect(rectInit);\n\n    // According to the specification following properties are not writable\n    // and are also not enumerable in the native implementation.\n    //\n    // Property accessors are not being used as they'd require to define a\n    // private WeakMap storage which may cause memory leaks in browsers that\n    // don't support this type of collections.\n    defineConfigurable(this, { target: target, contentRect: contentRect });\n};\n\nvar ResizeObserverSPI = function(callback, controller, callbackCtx) {\n    this.activeObservations_ = [];\n    this.observations_ = new MapShim();\n\n    if (typeof callback !== 'function') {\n        throw new TypeError('The callback provided as parameter 1 is not a function.');\n    }\n\n    this.callback_ = callback;\n    this.controller_ = controller;\n    this.callbackCtx_ = callbackCtx;\n};\n\n/**\r\n * Starts observing provided element.\r\n *\r\n * @param {Element} target - Element to be observed.\r\n * @returns {void}\r\n */\n\n\n/**\r\n * Registry of the ResizeObservation instances.\r\n *\r\n * @private {Map<Element, ResizeObservation>}\r\n */\n\n\n/**\r\n * Public ResizeObserver instance which will be passed to the callback\r\n * function and used as a value of it's \"this\" binding.\r\n *\r\n * @private {ResizeObserver}\r\n */\n\n/**\r\n * Collection of resize observations that have detected changes in dimensions\r\n * of elements.\r\n *\r\n * @private {Array<ResizeObservation>}\r\n */\nResizeObserverSPI.prototype.observe = function (target) {\n    if (!arguments.length) {\n        throw new TypeError('1 argument required, but only 0 present.');\n    }\n\n    // Do nothing if current environment doesn't have the Element interface.\n    if (typeof Element === 'undefined' || !(Element instanceof Object)) {\n        return;\n    }\n\n    if (!(target instanceof getWindowOf(target).Element)) {\n        throw new TypeError('parameter 1 is not of type \"Element\".');\n    }\n\n    var observations = this.observations_;\n\n    // Do nothing if element is already being observed.\n    if (observations.has(target)) {\n        return;\n    }\n\n    observations.set(target, new ResizeObservation(target));\n\n    this.controller_.addObserver(this);\n\n    // Force the update of observations.\n    this.controller_.refresh();\n};\n\n/**\r\n * Stops observing provided element.\r\n *\r\n * @param {Element} target - Element to stop observing.\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.unobserve = function (target) {\n    if (!arguments.length) {\n        throw new TypeError('1 argument required, but only 0 present.');\n    }\n\n    // Do nothing if current environment doesn't have the Element interface.\n    if (typeof Element === 'undefined' || !(Element instanceof Object)) {\n        return;\n    }\n\n    if (!(target instanceof getWindowOf(target).Element)) {\n        throw new TypeError('parameter 1 is not of type \"Element\".');\n    }\n\n    var observations = this.observations_;\n\n    // Do nothing if element is not being observed.\n    if (!observations.has(target)) {\n        return;\n    }\n\n    observations.delete(target);\n\n    if (!observations.size) {\n        this.controller_.removeObserver(this);\n    }\n};\n\n/**\r\n * Stops observing all elements.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.disconnect = function () {\n    this.clearActive();\n    this.observations_.clear();\n    this.controller_.removeObserver(this);\n};\n\n/**\r\n * Collects observation instances the associated element of which has changed\r\n * it's content rectangle.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.gatherActive = function () {\n        var this$1 = this;\n\n    this.clearActive();\n\n    this.observations_.forEach(function (observation) {\n        if (observation.isActive()) {\n            this$1.activeObservations_.push(observation);\n        }\n    });\n};\n\n/**\r\n * Invokes initial callback function with a list of ResizeObserverEntry\r\n * instances collected from active resize observations.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.broadcastActive = function () {\n    // Do nothing if observer doesn't have active observations.\n    if (!this.hasActive()) {\n        return;\n    }\n\n    var ctx = this.callbackCtx_;\n\n    // Create ResizeObserverEntry instance for every active observation.\n    var entries = this.activeObservations_.map(function (observation) {\n        return new ResizeObserverEntry(observation.target, observation.broadcastRect());\n    });\n\n    this.callback_.call(ctx, entries, ctx);\n    this.clearActive();\n};\n\n/**\r\n * Clears the collection of active observations.\r\n *\r\n * @returns {void}\r\n */\nResizeObserverSPI.prototype.clearActive = function () {\n    this.activeObservations_.splice(0);\n};\n\n/**\r\n * Tells whether observer has active observations.\r\n *\r\n * @returns {boolean}\r\n */\nResizeObserverSPI.prototype.hasActive = function () {\n    return this.activeObservations_.length > 0;\n};\n\n// Registry of internal observers. If WeakMap is not available use current shim\n// for the Map collection as it has all required methods and because WeakMap\n// can't be fully polyfilled anyway.\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\n\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\nvar ResizeObserver = function(callback) {\n    if (!(this instanceof ResizeObserver)) {\n        throw new TypeError('Cannot call a class as a function.');\n    }\n    if (!arguments.length) {\n        throw new TypeError('1 argument required, but only 0 present.');\n    }\n\n    var controller = ResizeObserverController.getInstance();\n    var observer = new ResizeObserverSPI(callback, controller, this);\n\n    observers.set(this, observer);\n};\n\n// Expose public methods of ResizeObserver.\n['observe', 'unobserve', 'disconnect'].forEach(function (method) {\n    ResizeObserver.prototype[method] = function () {\n        return (ref = observers.get(this))[method].apply(ref, arguments);\n        var ref;\n    };\n});\n\nvar index = (function () {\n    // Export existing implementation if available.\n    if (typeof global$1.ResizeObserver !== 'undefined') {\n        return global$1.ResizeObserver;\n    }\n\n    return ResizeObserver;\n})();\n\nexport default index;\n"],"sourceRoot":""}