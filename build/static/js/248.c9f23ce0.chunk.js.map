{"version":3,"sources":["views/apps/freshlist/order/AddOrder.js","axiosConfig.js"],"names":["i","AddOrder","props","changeHandler","e","setState","target","name","value","submitHandler","preventDefault","axiosConfig","post","state","then","response","console","log","data","swal","history","push","catch","error","delivery_slot","quantity","phone_no","order_zone","delivery_add","attribute","email","delivery_date","time_slot","status","productName","attribuName","previous_add","new_address","notify","get","err","className","col-sm-6","render","onClick","onSubmit","this","lg","md","type","pattern","placeholder","onChange","bind","d_date","isObject","onRemove","onSelect","options","showCheckbox","product","map","pnlist","_id","key","product_name","attlist","units_name","Ripple","color","Component","instance","axios","create","baseURL"],"mappings":"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","file":"static/js/248.c9f23ce0.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  FormGroup,\r\n  CustomInput,\r\n} from \"reactstrap\";\r\nimport { history } from \"../../../../history\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport Multiselect from \"multiselect-react-dropdown\";\r\nimport swal from \"sweetalert\";\r\nimport \"../../../../../src/layouts/assets/scss/pages/users.scss\";\r\nimport { Route } from \"react-router-dom\";\r\nexport class AddOrder extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      delivery_slot: \"\",\r\n      quantity: \"\",\r\n      phone_no: \"\",\r\n      order_zone: \"\",\r\n      delivery_add: \"\",\r\n      attribute: \"\",\r\n      // items: \"\",\r\n      email: \"\",\r\n      delivery_date: \"\",\r\n      time_slot: \"\",\r\n      status: \"\",\r\n      productName: [],\r\n      attribuName: [],\r\n      previous_add: \"\",\r\n      new_address: \"\",\r\n      notify: [],\r\n      // selectedOptions: [],\r\n    };\r\n  }\r\n  // changeHandler1 = (e) => {\r\n  //   this.setState({ status: e.target.value });\r\n  // };\r\n\r\n  changeHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  async componentDidMount() {\r\n    axiosConfig\r\n      .get(\"/admin/product_list\")\r\n      .then((response) => {\r\n        // console.log(response);\r\n        this.setState({\r\n          productName: response.data.data,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n\r\n    axiosConfig\r\n      .get(\"/admin/getall_units\")\r\n      .then((response) => {\r\n        this.setState({\r\n          attribuName: response.data.data,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        swal(\"Oops\", \"Something went wrong!\", \"error\");\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    axiosConfig\r\n      .post(\"/admin/addorder\", this.state)\r\n\r\n      .then((response) => {\r\n        console.log(response.data.data);\r\n        swal(\"Success!\", \"Submitted SuccessFull!\", \"success\");\r\n        this.props.history.push(\"/app/freshlist/order/all\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col>\r\n              <h1 col-sm-6 className=\"float-left\">\r\n                Add Order\r\n              </h1>\r\n            </Col>\r\n            <Col>\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Button\r\n                    className=\" btn btn-danger float-right\"\r\n                    onClick={() => history.push(\"/app/freshlist/order/all\")}\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                )}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={this.submitHandler}>\r\n              <Row className=\"mb-2\">\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Mobile Number</Label>\r\n                    <Input\r\n                      type=\"number\"\r\n                      pattern=\"[0-9]{0,5}\"\r\n                      placeholder=\"Mobile Number\"\r\n                      name=\"phone_no\"\r\n                      value={this.state.phone_no}\r\n                      // onChange={this.changeHandler}\r\n                      // onInput={this.handleChange.bind(this)}\r\n                      onChange={this.changeHandler.bind(this)}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Delivery Slot</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      placeholder=\"Delivery Slot\"\r\n                      name=\"delivery_slot\"\r\n                      value={this.state.delivery_slot}\r\n                      onChange={this.changeHandler}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                {/* <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Items</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      placeholder=\"Items\"\r\n                      name=\"items\"\r\n                      value={this.state.items}\r\n                      onChange={this.changeHandler}\r\n                    />\r\n                  </FormGroup>\r\n                </Col> */}\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Delivery Address</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      placeholder=\"Delivery Address\"\r\n                      name=\"delivery_add\"\r\n                      value={this.state.delivery_add}\r\n                      onChange={this.changeHandler}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Previous Address</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      placeholder=\"Previous Address\"\r\n                      name=\"previous_add\"\r\n                      value={this.state.previous_add}\r\n                      onChange={this.changeHandler}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>New Address</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      placeholder=\"New Address\"\r\n                      name=\"new_address\"\r\n                      value={this.state.new_address}\r\n                      onChange={this.changeHandler}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Delivery Date</Label>\r\n                    <Input\r\n                      type=\"date\"\r\n                      placeholder=\"Delivery Date\"\r\n                      name=\"d_date\"\r\n                      value={this.state.d_date}\r\n                      onChange={this.changeHandler}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Time Slot</Label>\r\n                    <Input\r\n                      type=\"time\"\r\n                      placeholder=\"Time Slot\"\r\n                      name=\"time_slot\"\r\n                      value={this.state.time_slot}\r\n                      onChange={this.changeHandler}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Email</Label>\r\n                    <Input\r\n                      type=\"email\"\r\n                      placeholder=\"Enter Email\"\r\n                      name=\"email\"\r\n                      value={this.state.email}\r\n                      onChange={this.changeHandler}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <Label>Notify </Label>\r\n                  <Multiselect\r\n                    name=\"notify\"\r\n                    value={this.state.notify}\r\n                    isObject={false}\r\n                    onRemove={(e) => {\r\n                      console.log(e);\r\n                    }}\r\n                    onSelect={(e) => {\r\n                      this.setState({ notify: e });\r\n                      // this.setState({ [e.target.name]: e.target.value });\r\n                      console.log(e);\r\n                    }}\r\n                    onChange={this.changeHandler}\r\n                    options={[\"SMS\", \"EMAIL\", \"WHATSAPP\", \"APP NOTIFICATION\"]}\r\n                    showCheckbox\r\n                    className=\"mmm\"\r\n                  />\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Order Zone </Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      placeholder=\"\"\r\n                      name=\"order_zone\"\r\n                      value={this.state.order_zone}\r\n                      onChange={this.changeHandler}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <Label>Order Status</Label>\r\n                  <CustomInput\r\n                    type=\"select\"\r\n                    placeholder=\"\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.changeHandler}\r\n                  >\r\n                    <option>--Select--</option>\r\n                    <option value=\"pending\">Pending</option>\r\n                    <option value=\"complete\">Completed</option>\r\n                    <option value=\"delivery\">Delivery</option>\r\n                    <option value=\"canceled\">Canceled</option>\r\n                    {/* <option value=\"Approved\">Approved</option>\r\n                    <option value=\"Packaging\">Packaging</option>\r\n                    <option value=\"Rejected\">Rejected</option> */}\r\n                    {/* <option value=\"Outfordelivery\">Outfordelivery</option> */}\r\n                    {/* <option value=\"Delivered\">Delivered</option>\r\n                    <option value=\"Failedtodeliver\">Failedtodeliver</option>\r\n                    <option value=\"Returned\">Returned</option> */}\r\n                  </CustomInput>\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"m-2\">\r\n                <Col>\r\n                  <h1 col-sm-6 className=\"float-left\">\r\n                    Add Product\r\n                  </h1>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col lg=\"6\" md=\"6\" className=\"mb-1\">\r\n                  <Label>Product Name</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    placeholder=\"Enter Product\"\r\n                    name=\"product\"\r\n                    value={this.state.product}\r\n                    onChange={this.changeHandler}\r\n                  >\r\n                    <option>Select Product</option>\r\n                    {this.state.productName?.map((pnlist) => (\r\n                      <option value={pnlist?._id} key={pnlist?._id}>\r\n                        {pnlist?.product_name}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" className=\"mb-1\">\r\n                  <Label>Attribute Name</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    placeholder=\"Enter Attribute\"\r\n                    name=\"attribute\"\r\n                    value={this.state.attribute}\r\n                    onChange={this.changeHandler}\r\n                  >\r\n                    <option>Select Attribute</option>\r\n                    {this.state.attribuName?.map((attlist) => (\r\n                      <option value={attlist?._id} key={attlist?._id}>\r\n                        {attlist?.units_name}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                </Col>\r\n\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <Label>Quantity</Label>\r\n                  <Input\r\n                    type=\"number\"\r\n                    placeholder=\"Quantity\"\r\n                    name=\"quantity\"\r\n                    value={this.state.quantity}\r\n                    onChange={this.changeHandler}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Button.Ripple\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  className=\"mr-1 mt-2\"\r\n                >\r\n                  Add Order\r\n                </Button.Ripple>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default AddOrder;\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  // baseURL: \"http://35.154.86.59/api/admin\",\r\n  // baseURL: \"http://13.127.52.128:8000\",\r\n  baseURL: \"http://3.6.37.16:8000\"\r\n});\r\n\r\nexport default instance;\r\n"],"sourceRoot":""}