{"version":3,"sources":["views/apps/freshlist/order/AddOrder.js","axiosConfig.js"],"names":["i","AddOrder","props","changeHandler","e","setState","target","name","value","handleremove","index","list","state","inputlist","splice","handleinputchange","handleClick","notify","attribute","quantity","submitHandler","preventDefault","axiosConfig","post","then","response","console","log","data","swal","history","push","catch","error","phone_no","order_zone","delivery_add","email","delivery_date","time_slot","status","productName","attribuName","new_address","get","err","className","col-sm-6","render","onClick","onSubmit","this","lg","md","required","type","maxlength","placeholder","onChange","bind","d_date","isObject","onRemove","onSelect","options","showCheckbox","map","attlist","_id","key","units_name","selectionLimit","length","Ripple","color","style","height","Component","instance","axios","create","baseURL"],"mappings":"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","file":"static/js/250.2c6b6586.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  FormGroup,\r\n  CustomInput,\r\n} from \"reactstrap\";\r\nimport { history } from \"../../../../history\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport Multiselect from \"multiselect-react-dropdown\";\r\nimport swal from \"sweetalert\";\r\nimport \"../../../../../src/layouts/assets/scss/pages/users.scss\";\r\nimport { Route } from \"react-router-dom\";\r\nexport class AddOrder extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      quantity: \"\",\r\n      phone_no: \"\",\r\n      order_zone: \"\",\r\n      delivery_add: \"\",\r\n      attribute: \"\",\r\n      email: \"\",\r\n      delivery_date: \"\",\r\n      time_slot: \"\",\r\n      status: \"\",\r\n      productName: [],\r\n      attribuName: [],\r\n      new_address: \"\",\r\n      notify: [],\r\n      inputlist: [{ notify: \"\", attribute: \"\", quantity: \"\" }],\r\n      // selectedOptions: [],\r\n    };\r\n  }\r\n\r\n  changeHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  handleremove = (index) => {\r\n    const list = [...this.state.inputlist];\r\n    list.splice(index, 1);\r\n    this.setState({ inputlist: list });\r\n  };\r\n\r\n  handleinputchange = (e, index) => {\r\n    const { name, value } = e.target;\r\n    const list = [...this.state.inputlist];\r\n    list[index][name] = value;\r\n\r\n    this.setState({ inputlist: list });\r\n  };\r\n  handleClick = () => {\r\n    this.setState({\r\n      inputlist: [\r\n        ...this.state.inputlist,\r\n        { notify: \"\", attribute: \"\", quantity: \"\" },\r\n      ],\r\n    });\r\n  };\r\n  async componentDidMount() {\r\n    axiosConfig\r\n      .get(\"/admin/product_list\")\r\n      .then((response) => {\r\n        // console.log(response);\r\n        this.setState({\r\n          productName: response.data.data,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n\r\n    axiosConfig\r\n      .get(\"/admin/getall_units\")\r\n      .then((response) => {\r\n        this.setState({\r\n          attribuName: response.data.data,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        swal(\"Oops\", \"Something went wrong!\", \"error\");\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    axiosConfig\r\n      .post(\"/admin/addorder\", this.state)\r\n\r\n      .then((response) => {\r\n        console.log(response.data.data);\r\n        swal(\"Success!\", \"Submitted SuccessFull!\", \"success\");\r\n        this.props.history.push(\"/app/freshlist/order/all\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col>\r\n              <h1 col-sm-6 className=\"float-left\">\r\n                Add Order\r\n              </h1>\r\n            </Col>\r\n            <Col>\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Button\r\n                    className=\" btn btn-danger float-right\"\r\n                    onClick={() => history.push(\"/app/freshlist/order/all\")}\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                )}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={this.submitHandler}>\r\n              <Row className=\"mb-2\">\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Mobile Number</Label>\r\n                    <Input\r\n                      required\r\n                      type=\"tel\"\r\n                      maxlength=\"10\"\r\n                      placeholder=\"Mobile Number\"\r\n                      name=\"phone_no\"\r\n                      value={this.state.phone_no}\r\n                      onChange={this.changeHandler.bind(this)}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                {/* <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Delivery Slot</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      placeholder=\"Delivery Slot\"\r\n                      name=\"delivery_slot\"\r\n                      value={this.state.delivery_slot}\r\n                      onChange={this.changeHandler}\r\n                    />\r\n                  </FormGroup>\r\n                </Col> */}\r\n                {/* <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Items</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      placeholder=\"Items\"\r\n                      name=\"items\"\r\n                      value={this.state.items}\r\n                      onChange={this.changeHandler}\r\n                    />\r\n                  </FormGroup>\r\n                </Col> */}\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Email</Label>\r\n                    <Input\r\n                      type=\"email\"\r\n                      placeholder=\"Enter Email\"\r\n                      name=\"email\"\r\n                      value={this.state.email}\r\n                      onChange={this.changeHandler}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Delivery Address</Label>\r\n                    <Input\r\n                      type=\"textarea\"\r\n                      placeholder=\"Delivery Address\"\r\n                      name=\"delivery_add\"\r\n                      value={this.state.delivery_add}\r\n                      onChange={this.changeHandler}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                {/* <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Previous Address</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      placeholder=\"Previous Address\"\r\n                      name=\"previous_add\"\r\n                      value={this.state.previous_add}\r\n                      onChange={this.changeHandler}\r\n                    />\r\n                  </FormGroup>\r\n                </Col> */}\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>New Address</Label>\r\n                    <Input\r\n                      type=\"textarea\"\r\n                      placeholder=\"New Address\"\r\n                      name=\"new_address\"\r\n                      value={this.state.new_address}\r\n                      onChange={this.changeHandler}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Select Delivery Date</Label>\r\n                    <Input\r\n                      type=\"date\"\r\n                      placeholder=\"Delivery Date\"\r\n                      name=\"d_date\"\r\n                      value={this.state.d_date}\r\n                      onChange={this.changeHandler}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Time Slot of Delivery</Label>\r\n                    <Input\r\n                      type=\"time\"\r\n                      placeholder=\"Time Slot\"\r\n                      name=\"time_slot\"\r\n                      value={this.state.time_slot}\r\n                      onChange={this.changeHandler}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <Label>Notify by </Label>\r\n                  <Multiselect\r\n                    name=\"notify\"\r\n                    value={this.state.notify}\r\n                    isObject={false}\r\n                    onRemove={(e) => {\r\n                      console.log(e);\r\n                    }}\r\n                    onSelect={(e) => {\r\n                      this.setState({ notify: e });\r\n                      // this.setState({ [e.target.name]: e.target.value });\r\n                      console.log(e);\r\n                    }}\r\n                    onChange={this.changeHandler}\r\n                    options={[\"SMS\", \"EMAIL\", \"WHATSAPP\", \"APP NOTIFICATION\"]}\r\n                    showCheckbox\r\n                    className=\"mmm\"\r\n                  />\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Order Zone </Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      placeholder=\"\"\r\n                      name=\"order_zone\"\r\n                      value={this.state.order_zone}\r\n                      onChange={this.changeHandler}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <Label>Order Status</Label>\r\n                  <CustomInput\r\n                    type=\"select\"\r\n                    placeholder=\"\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.changeHandler}\r\n                  >\r\n                    <option>--Select--</option>\r\n                    <option value=\"pending\">Pending</option>\r\n                    <option value=\"complete\">Completed</option>\r\n                    <option value=\"delivery\">Delivery</option>\r\n                    <option value=\"canceled\">Canceled</option>\r\n                    {/* <option value=\"Approved\">Approved</option>\r\n                    <option value=\"Packaging\">Packaging</option>\r\n                    <option value=\"Rejected\">Rejected</option> */}\r\n                    {/* <option value=\"Outfordelivery\">Outfordelivery</option> */}\r\n                    {/* <option value=\"Delivered\">Delivered</option>\r\n                    <option value=\"Failedtodeliver\">Failedtodeliver</option>\r\n                    <option value=\"Returned\">Returned</option> */}\r\n                  </CustomInput>\r\n                </Col>\r\n              </Row>\r\n              <hr />\r\n              <Row className=\"\">\r\n                <h1 col-sm-6 className=\"float-left mt-2 mb-2 mx-2\">\r\n                  Add Product\r\n                </h1>\r\n              </Row>\r\n              <Row>\r\n                <Col lg=\"6\" md=\"6\" className=\"mb-1\">\r\n                  <Label>Category name</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    placeholder=\"Enter Attribute\"\r\n                    name=\"attribute\"\r\n                    value={this.state.attribute}\r\n                    onChange={this.changeHandler}\r\n                  >\r\n                    <option>Select Category</option>\r\n                    {this.state.attribuName?.map((attlist) => (\r\n                      <option value={attlist?._id} key={attlist?._id}>\r\n                        {attlist?.units_name}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" className=\"mb-1\">\r\n                  <Label> Select Sub Category</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    placeholder=\"Enter Attribute\"\r\n                    name=\"attribute\"\r\n                    value={this.state.attribute}\r\n                    onChange={this.changeHandler}\r\n                  >\r\n                    <option>Select Sub-Category</option>\r\n                    {this.state.attribuName?.map((attlist) => (\r\n                      <option value={attlist?._id} key={attlist?._id}>\r\n                        {attlist?.units_name}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                </Col>\r\n              </Row>\r\n\r\n              {this.state.inputlist.map((e, i) => {\r\n                return (\r\n                  <Row key={i}>\r\n                    <Col lg=\"3\" md=\"3\" className=\"mb-1\">\r\n                      <Label>Product Name</Label>\r\n                      <Multiselect\r\n                        name=\"notify\"\r\n                        value={this.state.notify}\r\n                        isObject={false}\r\n                        placeholder=\"Search and Select\"\r\n                        onRemove={(e) => {\r\n                          console.log(e);\r\n                        }}\r\n                        onSelect={(e) => {\r\n                          this.setState({ notify: e });\r\n                          // this.setState({ [e.target.name]: e.target.value });\r\n                          console.log(e);\r\n                        }}\r\n                        selectionLimit=\"1\"\r\n                        onChange={(e) => this.handleinputchange(e, i)}\r\n                        options={[\r\n                          \"Aalu - 2kg \",\r\n                          \"tamater\",\r\n                          \"ata\",\r\n                          \"milk\",\r\n                          \"began,\",\r\n                        ]}\r\n                        showCheckbox\r\n                        className=\"mmm\"\r\n                      />\r\n                      {/* <Input\r\n                    type=\"select\"\r\n                    placeholder=\"Enter Product\"\r\n                    name=\"product\"\r\n                    value={this.state.product}\r\n                    onChange={this.changeHandler}\r\n                  >\r\n                    <option>Select Product</option>\r\n                    {this.state.productName?.map((pnlist) => (\r\n                      <option value={pnlist?._id} key={pnlist?._id}>\r\n                        {pnlist?.product_name}\r\n                      </option>\r\n                    ))}\r\n                  </Input> */}\r\n                    </Col>\r\n                    <Col lg=\"3\" md=\"3\" className=\"mb-1\">\r\n                      <Label>Attribute Name</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        placeholder=\"Enter Attribute\"\r\n                        name=\"attribute\"\r\n                        value={this.state.inputlist.attribute}\r\n                        onChange={(e) => this.handleinputchange(e, i)}\r\n                      >\r\n                        <option>Select Attribute</option>\r\n                        {this.state.attribuName?.map((attlist) => (\r\n                          <option value={attlist?._id} key={attlist?._id}>\r\n                            {attlist?.units_name}\r\n                          </option>\r\n                        ))}\r\n                      </Input>\r\n                    </Col>\r\n\r\n                    <Col lg=\"3\" md=\"3\">\r\n                      <Label>Quantity</Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        placeholder=\"Quantity\"\r\n                        name=\"quantity\"\r\n                        value={this.state.inputlist.quantity}\r\n                        onChange={(e) => this.handleinputchange(e, i)}\r\n                      />\r\n                    </Col>\r\n                    {/* <Col>\r\n                      <Button.Ripple\r\n                        onClick={this.handleClick}\r\n                        color=\"primary\"\r\n                        className=\"mr-1 mt-2\"\r\n                      >\r\n                        Add new Field\r\n                      </Button.Ripple>\r\n                    </Col> */}\r\n                    <Col lg=\"3\" md=\"3\" className=\"d-flex\">\r\n                      {this.state.inputlist.length !== 1 && (\r\n                        <Button.Ripple\r\n                          color=\"primary\"\r\n                          className=\"mr-1 mt-2\"\r\n                          style={{ height: \"40px\" }}\r\n                          onClick={() => this.handleremove(i)}\r\n                        >\r\n                          Remove\r\n                        </Button.Ripple>\r\n                      )}\r\n                      {this.state.inputlist.length - 1 === i && (\r\n                        <Button.Ripple\r\n                          color=\"primary\"\r\n                          className=\"mr-1 mt-2\"\r\n                          style={{ height: \"40px\" }}\r\n                          onClick={this.handleClick}\r\n                        >\r\n                          Add More\r\n                        </Button.Ripple>\r\n                      )}\r\n                    </Col>\r\n                  </Row>\r\n                );\r\n              })}\r\n\r\n              <Row>\r\n                <Button.Ripple\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  className=\"mr-1 mt-2\"\r\n                >\r\n                  Add Order\r\n                </Button.Ripple>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default AddOrder;\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  // baseURL: \"http://35.154.86.59/api/admin\",\r\n  // baseURL: \"http://13.127.52.128:8000\",\r\n  baseURL: \"http://3.6.37.16:8000\"\r\n});\r\n\r\nexport default instance;\r\n"],"sourceRoot":""}