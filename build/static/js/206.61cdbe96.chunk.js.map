{"version":3,"sources":["views/apps/freshlist/vendor/WithDraws.js","axiosConfig.js","../node_modules/reactstrap/es/Input.js"],"names":["WithDraws","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","className","src","data","product_img","alt","height","name","desc","value","status","size","color","onClick","history","push","selectedData","gridApi","getSelectedRows","runthisfunction","_id","updateRowData","remove","onGridReady","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","this","sm","col-sm-6","tag","length","right","placeholder","onChange","e","target","Ripple","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component","instance","axios","create","baseURL","_excluded","propTypes","children","PropTypes","node","type","string","oneOfType","number","bsSize","valid","bool","invalid","tagPropType","innerRef","object","func","plaintext","addon","cssModule","Input","_React$Component","props","_this","call","getRef","bind","_assertThisInitialized","focus","_inheritsLoose","_proto","prototype","ref","render","_this$props","attributes","_objectWithoutPropertiesLoose","checkInput","indexOf","isNotaNumber","RegExp","Tag","formControlClass","test","warnOnce","classes","mapToCssModules","classNames","createElement","_extends","defaultProps"],"mappings":"iXAuBMA,G,0NACFC,MAAQ,CACJC,QAAS,GACTC,mBAAoB,GACpBC,eAAgB,GAChBC,YAAa,GACbC,cAAe,CACXC,UAAU,EACVC,UAAU,EACVC,WAAW,EACXC,cAAc,GAElBC,WAAY,CACR,CACIC,WAAY,OACZC,YAAa,oBACbC,MAAO,oBACPC,MAAO,IACPC,QAAQ,GAEZ,CACIJ,WAAY,SACZE,MAAO,cACPE,QAAQ,EACRD,MAAO,IACPE,sBAAuB,SAACC,GACpB,OACI,yBAAKC,UAAU,4CACX,yBACIA,UAAU,uBACVC,IAAKF,EAAOG,KAAKC,YACjBC,IAAI,cACJC,OAAO,KACPT,MAAM,UAM1B,CACIH,WAAY,OACZE,MAAO,OAEPE,OAAQ,oBACRD,MAAO,IACPE,sBAAuB,SAACC,GACpB,OACI,yBAAKC,UAAU,4CACX,yBAAKA,UAAU,QACX,8BAAOD,EAAOG,KAAKI,UAMvC,CACIb,WAAY,eACZE,MAAO,OACPE,QAAQ,EACRD,MAAO,IACPE,sBAAuB,SAACC,GACpB,OACI,yBAAKC,UAAU,4CACX,8BAAOD,EAAOG,KAAKK,SAKnC,CACId,WAAY,SACZE,MAAO,SACPE,QAAQ,EACRD,MAAO,IACPE,sBAAuB,SAACC,GACpB,MAAwB,WAAjBA,EAAOS,MACV,yBAAKR,UAAU,kCACVD,EAAOG,KAAKO,QAEA,aAAjBV,EAAOS,MACP,yBAAKR,UAAU,iCACVD,EAAOG,KAAKO,QAEjB,OAGZ,CACIhB,WAAY,UACZE,MAAO,eACPC,MAAO,IACPE,sBAAuB,SAACC,GACpB,OACI,yBAAKC,UAAU,0BACX,kBAAC,IAAD,CACIA,UAAU,QACVU,KAAK,OACLC,MAAM,QACNC,QAAS,kBACLC,IAAQC,KAAR,0CAER,kBAAC,IAAD,CACIJ,KAAM,GACNE,QAAS,WACL,IAAIG,EAAe,EAAKC,QAAQC,kBAChC,EAAKC,gBAAgBnB,EAAOG,KAAKiB,KACjC,EAAKH,QAAQI,cAAc,CAAEC,OAAQN,Y,EAwBrEO,YAAc,SAACvB,GACX,EAAKiB,QAAUjB,EAAOwB,IACtB,EAAKC,cAAgBzB,EAAO0B,UAC5B,EAAKC,SAAS,CACVzC,eAAgB,EAAK+B,QAAQW,2BAA6B,EAC1DzC,YAAa,EAAK8B,QAAQY,wBAC1BC,WAAY,EAAKb,QAAQc,6B,EAIjCC,kBAAoB,SAACC,GACjB,EAAKhB,QAAQiB,eAAeD,I,EAGhCE,WAAa,SAACF,GACN,EAAKhB,UACL,EAAKA,QAAQmB,sBAAsBC,OAAOJ,IAC1C,EAAKN,SAAS,CACVzC,eAAgB+C,EAChB9C,YAAa8C,M,4CAKzB,WAAU,IAAD,OACL,EAA+CK,KAAKvD,MAA5CC,EAAR,EAAQA,QAASS,EAAjB,EAAiBA,WAAYL,EAA7B,EAA6BA,cAC7B,OACI,kBAAC,IAAD,CAAKa,UAAU,iBACX,kBAAC,IAAD,CAAKsC,GAAG,OACR,kBAAC,IAAD,CAAKA,GAAG,MACJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKtC,UAAU,OACX,kBAAC,IAAD,KACI,wBAAIuC,YAAA,EAASvC,UAAU,cAAvB,6BAMR,kBAAC,IAAD,KAC4B,OAAvBqC,KAAKvD,MAAMC,QAAmB,KAC3B,yBAAKiB,UAAU,8CACX,yBAAKA,UAAU,+DACX,yBAAKA,UAAU,QACX,kBAAC,IAAD,CAAsBA,UAAU,mBAC5B,kBAAC,IAAD,CAAgBwC,IAAI,OACfH,KAAKrB,QACAqB,KAAKvD,MAAMG,eACX,GAAKoD,KAAKvD,MAAMI,aACjBmD,KAAKvD,MAAMI,YAAc,GAAI,IAJtC,IAKM,IACDmD,KAAKvD,MAAMC,QAAQ0D,OAChBJ,KAAKvD,MAAMG,eAAiBoD,KAAKvD,MAAMI,YACvC,EACEmD,KAAKvD,MAAMG,eAAiBoD,KAAKvD,MAAMI,YACvCmD,KAAKvD,MAAMC,QAAQ0D,OAAQ,IAVrC,MAWQJ,KAAKvD,MAAMC,QAAQ0D,OACvB,kBAAC,IAAD,CAAazC,UAAU,QAAQU,KAAM,MAEzC,kBAAC,IAAD,CAAcgC,OAAK,GACf,kBAAC,IAAD,CACIF,IAAI,MACJ5B,QAAS,kBAAM,EAAKsB,WAAW,MAFnC,MAMA,kBAAC,IAAD,CACIM,IAAI,MACJ5B,QAAS,kBAAM,EAAKsB,WAAW,MAFnC,MAMA,kBAAC,IAAD,CACIM,IAAI,MACJ5B,QAAS,kBAAM,EAAKsB,WAAW,OAFnC,OAMA,kBAAC,IAAD,CACIM,IAAI,MACJ5B,QAAS,kBAAM,EAAKsB,WAAW,OAFnC,UASZ,yBAAKlC,UAAU,iDACX,yBAAKA,UAAU,oBACX,kBAAC,IAAD,CACI2C,YAAY,YACZC,SAAU,SAACC,GAAD,OACN,EAAKd,kBAAkBc,EAAEC,OAAOtC,QAEpCA,MAAO6B,KAAKvD,MAAM0B,SAG1B,yBAAKR,UAAU,cACX,kBAAC,IAAO+C,OAAR,CACIpC,MAAM,UACNC,QAAS,kBAAM,EAAKI,QAAQgC,oBAFhC,oBASZ,kBAAC,IAAcC,SAAf,MACK,SAACC,GAAD,OACG,kBAAC,cAAD,CACIC,YAAa,GACbC,aAAa,WACbjE,cAAeA,EACfK,WAAYA,EACZT,QAASA,EACTuC,YAAa,EAAKA,YAClB+B,iBAAkB,QAClBC,aAAa,EACbC,gBAAgB,EAChBC,YAAY,EACZxE,mBAAoB,EAAKF,MAAME,mBAC/ByE,eAAe,SACfC,UAAuC,QAA5BR,EAAQpE,MAAM6E,wB,GA1PjDC,IAAMC,YAwQfhF,a,iCC/Rf,YAEMiF,EAFN,OAEiBC,EAAMC,OAAO,CAG5BC,QAAS,0BAGIH,O,uDCRf,yFAIII,EAAY,CAAC,YAAa,YAAa,OAAQ,SAAU,QAAS,UAAW,MAAO,QAAS,YAAa,YAO1GC,EAAY,CACdC,SAAUC,IAAUC,KACpBC,KAAMF,IAAUG,OAChB9D,KAAM2D,IAAUI,UAAU,CAACJ,IAAUK,OAAQL,IAAUG,SACvDG,OAAQN,IAAUG,OAClBI,MAAOP,IAAUQ,KACjBC,QAAST,IAAUQ,KACnBrC,IAAKuC,cACLC,SAAUX,IAAUI,UAAU,CAACJ,IAAUY,OAAQZ,IAAUa,KAAMb,IAAUG,SAC3EW,UAAWd,IAAUQ,KACrBO,MAAOf,IAAUQ,KACjB7E,UAAWqE,IAAUG,OACrBa,UAAWhB,IAAUY,QAMnBK,EAAqB,SAAUC,GAGjC,SAASD,EAAME,GACb,IAAIC,EAKJ,OAHAA,EAAQF,EAAiBG,KAAKrD,KAAMmD,IAAUnD,MACxCsD,OAASF,EAAME,OAAOC,KAAKC,YAAuBJ,IACxDA,EAAMK,MAAQL,EAAMK,MAAMF,KAAKC,YAAuBJ,IAC/CA,EARTM,YAAeT,EAAOC,GAWtB,IAAIS,EAASV,EAAMW,UA8EnB,OA5EAD,EAAOL,OAAS,SAAgBO,GAC1B7D,KAAKmD,MAAMR,UACb3C,KAAKmD,MAAMR,SAASkB,GAGtB7D,KAAK6D,IAAMA,GAGbF,EAAOF,MAAQ,WACTzD,KAAK6D,KACP7D,KAAK6D,IAAIJ,SAIbE,EAAOG,OAAS,WACd,IAAIC,EAAc/D,KAAKmD,MACnBxF,EAAYoG,EAAYpG,UACxBqF,EAAYe,EAAYf,UACxBd,EAAO6B,EAAY7B,KACnBI,EAASyB,EAAYzB,OACrBC,EAAQwB,EAAYxB,MACpBE,EAAUsB,EAAYtB,QACtBtC,EAAM4D,EAAY5D,IAClB4C,EAAQgB,EAAYhB,MACpBD,EAAYiB,EAAYjB,UACxBH,EAAWoB,EAAYpB,SACvBqB,EAAaC,YAA8BF,EAAalC,GAExDqC,EAAa,CAAC,QAAS,YAAYC,QAAQjC,IAAS,EACpDkC,EAAe,IAAIC,OAAO,MAAO,KAKjCC,EAAMnE,IAFiB,WAAT+B,GADW,aAATA,EAG6BA,EAAO,SACpDqC,EAAmB,eAEnBzB,GACFyB,GAAsC,aACtCD,EAAMnE,GAAO,SATU,SAAT+B,EAWdqC,GAAsC,QARd,UAATrC,EAUfqC,GAAsC,SAC7BL,IAEPK,EADExB,EACiB,KAEA,oBAInBiB,EAAW3F,MAAQ+F,EAAaI,KAAKR,EAAW3F,QAClDoG,mBAAS,oFACTnC,EAAS0B,EAAW3F,YACb2F,EAAW3F,MAGpB,IAAIqG,EAAUC,0BAAgBC,IAAWjH,EAAW8E,GAAW,aAAcF,GAAS,aAAYD,GAAS,gBAAkBA,EAAgBiC,GAAmBvB,GAWhK,OATY,UAARsB,GAAmBnE,GAAsB,oBAARA,KACnC6D,EAAW9B,KAAOA,GAGhB8B,EAAWjC,WAAce,GAAsB,WAATZ,GAAoC,kBAARoC,GAA4B,WAARA,IACxFG,mBAAS,yBAA4BvC,EAAO,6EACrC8B,EAAWjC,UAGAR,IAAMsD,cAAcP,EAAKQ,YAAS,GAAId,EAAY,CACpEH,IAAKlB,EACLhF,UAAW+G,EACX,eAAgBjC,MAIbQ,EA1FgB,CA2FvB1B,IAAMC,WAERyB,EAAMnB,UAAYA,EAClBmB,EAAM8B,aAlGa,CACjB7C,KAAM,QAkGOe","file":"static/js/206.61cdbe96.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n    Card,\n    CardBody,\n    Input,\n    Row,\n    Col,\n    UncontrolledDropdown,\n    DropdownMenu,\n    DropdownItem,\n    DropdownToggle,\n    Button,\n} from \"reactstrap\";\nimport axiosConfig from \"../../../../axiosConfig\";\nimport { ContextLayout } from \"../../../../utility/context/Layout\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\n\nimport { Eye, Edit, Trash2, ChevronDown } from \"react-feather\";\n//import classnames from \"classnames\";\nimport { history } from \"../../../../history\";\nimport \"../../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\nimport \"../../../../assets/scss/pages/users.scss\";\nclass WithDraws extends React.Component {\n    state = {\n        rowData: [],\n        paginationPageSize: 20,\n        currenPageSize: \"\",\n        getPageSize: \"\",\n        defaultColDef: {\n            sortable: true,\n            editable: true,\n            resizable: true,\n            suppressMenu: true,\n        },\n        columnDefs: [\n            {\n                headerName: \"S.No\",\n                valueGetter: \"node.rowIndex + 1\",\n                field: \"node.rowIndex + 1\",\n                width: 150,\n                filter: true,\n            },\n            {\n                headerName: \"Amount\",\n                field: \"product_img\",\n                filter: true,\n                width: 150,\n                cellRendererFramework: (params) => {\n                    return (\n                        <div className=\"d-flex align-items-center cursor-pointer\">\n                            <img\n                                className=\"rounded-circle mr-50\"\n                                src={params.data.product_img}\n                                alt=\"user avatar\"\n                                height=\"40\"\n                                width=\"40\"\n                            />\n                        </div>\n                    );\n                },\n            },\n            {\n                headerName: \"Name\",\n                field: \"name\",\n                //filter: true,\n                filter: \"agSetColumnFilter\",\n                width: 250,\n                cellRendererFramework: (params) => {\n                    return (\n                        <div className=\"d-flex align-items-center cursor-pointer\">\n                            <div className=\"ml-2\">\n                                <span>{params.data.name}</span>\n                            </div>\n                        </div>\n                    );\n                },\n            },\n            {\n                headerName: \"Request Time\",\n                field: \"desc\",\n                filter: true,\n                width: 200,\n                cellRendererFramework: (params) => {\n                    return (\n                        <div className=\"d-flex align-items-center cursor-pointer\">\n                            <span>{params.data.desc}</span>\n                        </div>\n                    );\n                },\n            },\n            {\n                headerName: \"Status\",\n                field: \"status\",\n                filter: true,\n                width: 150,\n                cellRendererFramework: (params) => {\n                    return params.value === \"Active\" ? (\n                        <div className=\"badge badge-pill badge-success\">\n                            {params.data.status}\n                        </div>\n                    ) : params.value === \"Inactive\" ? (\n                        <div className=\"badge badge-pill badge-danger\">\n                            {params.data.status}\n                        </div>\n                    ) : null;\n                },\n            },\n            {\n                headerName: \"Actions\",\n                field: \"transactions\",\n                width: 150,\n                cellRendererFramework: (params) => {\n                    return (\n                        <div className=\"actions cursor-pointer\">\n                            <Eye\n                                className=\"mr-50\"\n                                size=\"25px\"\n                                color=\"green\"\n                                onClick={() =>\n                                    history.push(`/app/freshlist/vendor/viewWithDraws`)}\n                            />\n                            <Trash2\n                                size={20}\n                                onClick={() => {\n                                    let selectedData = this.gridApi.getSelectedRows();\n                                    this.runthisfunction(params.data._id);\n                                    this.gridApi.updateRowData({ remove: selectedData });\n                                }}\n                            />\n                        </div>\n                    );\n                },\n            },\n        ],\n    };\n\n    // async componentDidMount() {\n    //     await axiosConfig.get(\"/getproductCategory\").then((response) => {\n    //         let rowData = response.data.data;\n    //         this.setState({ rowData });\n    //     });\n    // }\n\n    // async runthisfunction(id) {\n    //     console.log(id);\n    //     await axiosConfig.get(`/deleteproductcategory/${id}`).then((response) => {\n    //         console.log(response);\n    //     });\n    // }\n\n    onGridReady = (params) => {\n        this.gridApi = params.api;\n        this.gridColumnApi = params.columnApi;\n        this.setState({\n            currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\n            getPageSize: this.gridApi.paginationGetPageSize(),\n            totalPages: this.gridApi.paginationGetTotalPages(),\n        });\n    };\n\n    updateSearchQuery = (val) => {\n        this.gridApi.setQuickFilter(val);\n    };\n\n    filterSize = (val) => {\n        if (this.gridApi) {\n            this.gridApi.paginationSetPageSize(Number(val));\n            this.setState({\n                currenPageSize: val,\n                getPageSize: val,\n            });\n        }\n    };\n\n    render() {\n        const { rowData, columnDefs, defaultColDef } = this.state;\n        return (\n            <Row className=\"app-user-list\">\n                <Col sm=\"12\"></Col>\n                <Col sm=\"12\">\n                    <Card>\n                        <Row className=\"m-2\">\n                            <Col>\n                                <h1 col-sm-6 className=\"float-left\">\n                                    WithDraws Request Table\n                                </h1>\n                            </Col>\n\n                        </Row>\n                        <CardBody>\n                            {this.state.rowData === null ? null : (\n                                <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\n                                    <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\n                                        <div className=\"mb-1\">\n                                            <UncontrolledDropdown className=\"p-1 ag-dropdown\">\n                                                <DropdownToggle tag=\"div\">\n                                                    {this.gridApi\n                                                        ? this.state.currenPageSize\n                                                        : \"\" * this.state.getPageSize -\n                                                        (this.state.getPageSize - 1)}{\" \"}\n                                                    -{\" \"}\n                                                    {this.state.rowData.length -\n                                                        this.state.currenPageSize * this.state.getPageSize >\n                                                        0\n                                                        ? this.state.currenPageSize * this.state.getPageSize\n                                                        : this.state.rowData.length}{\" \"}\n                                                    of {this.state.rowData.length}\n                                                    <ChevronDown className=\"ml-50\" size={15} />\n                                                </DropdownToggle>\n                                                <DropdownMenu right>\n                                                    <DropdownItem\n                                                        tag=\"div\"\n                                                        onClick={() => this.filterSize(20)}\n                                                    >\n                                                        20\n                                                    </DropdownItem>\n                                                    <DropdownItem\n                                                        tag=\"div\"\n                                                        onClick={() => this.filterSize(50)}\n                                                    >\n                                                        50\n                                                    </DropdownItem>\n                                                    <DropdownItem\n                                                        tag=\"div\"\n                                                        onClick={() => this.filterSize(100)}\n                                                    >\n                                                        100\n                                                    </DropdownItem>\n                                                    <DropdownItem\n                                                        tag=\"div\"\n                                                        onClick={() => this.filterSize(134)}\n                                                    >\n                                                        134\n                                                    </DropdownItem>\n                                                </DropdownMenu>\n                                            </UncontrolledDropdown>\n                                        </div>\n                                        <div className=\"d-flex flex-wrap justify-content-between mb-1\">\n                                            <div className=\"table-input mr-1\">\n                                                <Input\n                                                    placeholder=\"search...\"\n                                                    onChange={(e) =>\n                                                        this.updateSearchQuery(e.target.value)\n                                                    }\n                                                    value={this.state.value}\n                                                />\n                                            </div>\n                                            <div className=\"export-btn\">\n                                                <Button.Ripple\n                                                    color=\"primary\"\n                                                    onClick={() => this.gridApi.exportDataAsCsv()}\n                                                >\n                                                    Export as CSV\n                                                </Button.Ripple>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <ContextLayout.Consumer>\n                                        {(context) => (\n                                            <AgGridReact\n                                                gridOptions={{}}\n                                                rowSelection=\"multiple\"\n                                                defaultColDef={defaultColDef}\n                                                columnDefs={columnDefs}\n                                                rowData={rowData}\n                                                onGridReady={this.onGridReady}\n                                                colResizeDefault={\"shift\"}\n                                                animateRows={true}\n                                                floatingFilter={false}\n                                                pagination={true}\n                                                paginationPageSize={this.state.paginationPageSize}\n                                                pivotPanelShow=\"always\"\n                                                enableRtl={context.state.direction === \"rtl\"}\n                                            />\n                                        )}\n                                    </ContextLayout.Consumer>\n                                </div>\n                            )}\n                        </CardBody>\n                    </Card>\n                </Col>\n            </Row>\n        );\n    }\n}\n\nexport default WithDraws;","import axios from \"axios\";\n\nconst instance = axios.create({\n  // baseURL: \"http://35.154.86.59/api/admin\",\n  // baseURL: \"http://13.127.52.128:8000\",\n  baseURL: \"http://3.6.37.16:8000\"\n});\n\nexport default instance;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"type\", \"bsSize\", \"valid\", \"invalid\", \"tag\", \"addon\", \"plaintext\", \"innerRef\"];\n\n/* eslint react/prefer-stateless-function: 0 */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, warnOnce, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  type: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  bsSize: PropTypes.string,\n  valid: PropTypes.bool,\n  invalid: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  plaintext: PropTypes.bool,\n  addon: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  type: 'text'\n};\n\nvar Input = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Input, _React$Component);\n\n  function Input(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.getRef = _this.getRef.bind(_assertThisInitialized(_this));\n    _this.focus = _this.focus.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Input.prototype;\n\n  _proto.getRef = function getRef(ref) {\n    if (this.props.innerRef) {\n      this.props.innerRef(ref);\n    }\n\n    this.ref = ref;\n  };\n\n  _proto.focus = function focus() {\n    if (this.ref) {\n      this.ref.focus();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        type = _this$props.type,\n        bsSize = _this$props.bsSize,\n        valid = _this$props.valid,\n        invalid = _this$props.invalid,\n        tag = _this$props.tag,\n        addon = _this$props.addon,\n        plaintext = _this$props.plaintext,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n    var checkInput = ['radio', 'checkbox'].indexOf(type) > -1;\n    var isNotaNumber = new RegExp('\\\\D', 'g');\n    var fileInput = type === 'file';\n    var textareaInput = type === 'textarea';\n    var selectInput = type === 'select';\n    var rangeInput = type === 'range';\n    var Tag = tag || (selectInput || textareaInput ? type : 'input');\n    var formControlClass = 'form-control';\n\n    if (plaintext) {\n      formControlClass = formControlClass + \"-plaintext\";\n      Tag = tag || 'input';\n    } else if (fileInput) {\n      formControlClass = formControlClass + \"-file\";\n    } else if (rangeInput) {\n      formControlClass = formControlClass + \"-range\";\n    } else if (checkInput) {\n      if (addon) {\n        formControlClass = null;\n      } else {\n        formControlClass = 'form-check-input';\n      }\n    }\n\n    if (attributes.size && isNotaNumber.test(attributes.size)) {\n      warnOnce('Please use the prop \"bsSize\" instead of the \"size\" to bootstrap\\'s input sizing.');\n      bsSize = attributes.size;\n      delete attributes.size;\n    }\n\n    var classes = mapToCssModules(classNames(className, invalid && 'is-invalid', valid && 'is-valid', bsSize ? \"form-control-\" + bsSize : false, formControlClass), cssModule);\n\n    if (Tag === 'input' || tag && typeof tag === 'function') {\n      attributes.type = type;\n    }\n\n    if (attributes.children && !(plaintext || type === 'select' || typeof Tag !== 'string' || Tag === 'select')) {\n      warnOnce(\"Input with a type of \\\"\" + type + \"\\\" cannot have children. Please use \\\"value\\\"/\\\"defaultValue\\\" instead.\");\n      delete attributes.children;\n    }\n\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      ref: innerRef,\n      className: classes,\n      \"aria-invalid\": invalid\n    }));\n  };\n\n  return Input;\n}(React.Component);\n\nInput.propTypes = propTypes;\nInput.defaultProps = defaultProps;\nexport default Input;"],"sourceRoot":""}