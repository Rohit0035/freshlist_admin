{"version":3,"sources":["views/apps/freshlist/notif/Notification.js","axiosConfig.js","../node_modules/reactstrap/es/Input.js"],"names":["Notification","state","rowData","paginationPageSize","currenPageSize","getPageSize","defaultColDef","sortable","editable","resizable","suppressMenu","columnDefs","headerName","valueGetter","field","width","filter","cellRendererFramework","params","className","data","title","ReactHtmlParser","desc","size","onClick","history","push","selectedData","gridApi","getSelectedRows","runthisfunction","_id","updateRowData","remove","onGridReady","api","gridColumnApi","columnApi","setState","paginationGetCurrentPage","paginationGetPageSize","totalPages","paginationGetTotalPages","updateSearchQuery","val","setQuickFilter","filterSize","paginationSetPageSize","Number","this","console","log","sm","tag","length","right","placeholder","onChange","e","target","value","Ripple","color","exportDataAsCsv","Consumer","context","gridOptions","rowSelection","colResizeDefault","animateRows","floatingFilter","pagination","pivotPanelShow","enableRtl","direction","React","Component","instance","axios","create","baseURL","_excluded","propTypes","children","PropTypes","node","type","string","oneOfType","number","bsSize","valid","bool","invalid","tagPropType","innerRef","object","func","plaintext","addon","cssModule","Input","_React$Component","props","_this","call","getRef","bind","_assertThisInitialized","focus","_inheritsLoose","_proto","prototype","ref","render","_this$props","attributes","_objectWithoutPropertiesLoose","checkInput","indexOf","isNotaNumber","RegExp","Tag","formControlClass","test","warnOnce","classes","mapToCssModules","classNames","createElement","_extends","defaultProps"],"mappings":"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","file":"static/js/151.4f422287.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n    Card,\n    CardBody,\n    Input,\n    Row,\n    Col,\n    Button,\n    UncontrolledDropdown,\n    DropdownMenu,\n    DropdownItem,\n    DropdownToggle,\n} from \"reactstrap\";\nimport axiosConfig from \"../../../../axiosConfig\";\nimport { ContextLayout } from \"../../../../utility/context/Layout\";\nimport { AgGridReact } from \"ag-grid-react\";\nimport { Eye, Edit, Trash2, ChevronDown } from \"react-feather\";\nimport { history } from \"../../../../history\";\nimport \"../../../../assets/scss/plugins/tables/_agGridStyleOverride.scss\";\nimport \"../../../../assets/scss/pages/users.scss\";\nimport ReactHtmlParser from 'react-html-parser'\n\nclass Notification extends React.Component {\n    state = {\n        rowData: [],\n        paginationPageSize: 20,\n        currenPageSize: \"\",\n        getPageSize: \"\",\n        defaultColDef: {\n            sortable: true,\n            editable: true,\n            resizable: true,\n            suppressMenu: true,\n        },\n\n        columnDefs: [\n            {\n                headerName: \"S.No\",\n                valueGetter: \"node.rowIndex + 1\",\n                field: \"node.rowIndex + 1\",\n                width: 150,\n                filter: true,\n                // checkboxSelection: true,\n                // headerCheckboxSelectionFilteredOnly: true,\n                // headerCheckboxSelection: true,\n            },\n            {\n                headerName: \"Title\",\n                field: \"title\",\n                width: 400,\n                cellRendererFramework: (params) => {\n                    return (\n                        <div className=\"d-flex align-items-center cursor-pointer\">\n                            <span>{params.data.title}</span>\n                        </div>\n                    );\n                },\n            },\n            {\n                headerName: \"Description\",\n                field: \"banner_title\",\n                filter: true,\n                width: 200,\n                cellRendererFramework: (params) => {\n                    return (\n                        <div className=\"d-flex align-items-center cursor-pointer\">\n                            <span>{ReactHtmlParser(params.data.desc)}</span>\n                        </div>\n                    );\n                },\n            },\n            // {\n            //     headerName: \"Banner Image\",\n            //     field: \"banner_img\",\n            //     filter: false,\n            //     width: 150,\n            //     setColumnVisible: false,\n            //     cellRendererFramework: (params) => {\n            //         return (\n            //             <div className=\"d-flex align-items-center cursor-pointer\">\n            //                 <img\n            //                     className=\" rounded-circle  mr-3\"\n            //                     src={params.data.banner_img}\n            //                     alt=\"user avatar\"\n            //                     height=\"40\"\n            //                     width=\"40\"\n            //                 />\n            //             </div>\n            //         );\n            //     },\n            // },\n            // {\n            //     headerName: \"Status\",\n            //     field: \"status\",\n            //     filter: true,\n            //     width: 150,\n            //     cellRendererFramework: (params) => {\n            //         return params.value === \"Active\" ? (\n            //             <div className=\"badge badge-pill badge-success\">\n            //                 {params.data.status}\n            //             </div>\n            //         ) : params.value === \"Inactive\" ? (\n            //             <div className=\"badge badge-pill badge-warning\">\n            //                 {params.data.status}\n            //             </div>\n            //         ) : null;\n            //     },\n            // },\n            {\n                headerName: \"Actions\",\n                field: \"sortorder\",\n\n                // field: \"transactions\",\n                width: 150,\n                cellRendererFramework: (params) => {\n                    return (\n                        <div className=\"actions cursor-pointer\">\n                            {/* <Eye\n                                className=\"mr-50\"\n                                size={20}\n                                onClick={() =>\n                                    history.push(`/app/slider/viewSlider/${params.data._id}`)\n                                }\n                            /> */}\n                            <Edit\n                                className=\"mr-50\"\n                                size={20}\n                                onClick={() => history.push(\"/app/freshlist/notif/editNotification\")}\n                            />\n                            <Trash2\n                                size={20}\n                                onClick={() => {\n                                    let selectedData = this.gridApi.getSelectedRows();\n                                    this.runthisfunction(params.data._id);\n                                    this.gridApi.updateRowData({ remove: selectedData });\n                                }}\n                            />\n                        </div>\n                    );\n                },\n            },\n        ],\n    };\n    // async componentDidMount() {\n    //   await axiosConfig.get(\"/getbanner\").then((response) => {\n    //     const rowData = response.data.data;\n    //     console.log(rowData);\n    //     this.setState({ rowData });\n    //   });\n    // }\n    // async runthisfunction(id) {\n    //   console.log(id);\n    //   await axiosConfig.get(`/delbanner/${id}`).then(\n    //     (response) => {\n    //       console.log(response);\n    //     },\n    //     (error) => {\n    //       console.log(error);\n    //     }\n    //   );\n    // }\n    onGridReady = (params) => {\n        this.gridApi = params.api;\n        this.gridColumnApi = params.columnApi;\n        this.setState({\n            currenPageSize: this.gridApi.paginationGetCurrentPage() + 1,\n            getPageSize: this.gridApi.paginationGetPageSize(),\n            totalPages: this.gridApi.paginationGetTotalPages(),\n        });\n    };\n\n    updateSearchQuery = (val) => {\n        this.gridApi.setQuickFilter(val);\n    };\n\n    filterSize = (val) => {\n        if (this.gridApi) {\n            this.gridApi.paginationSetPageSize(Number(val));\n            this.setState({\n                currenPageSize: val,\n                getPageSize: val,\n            });\n        }\n    };\n    render() {\n        const { rowData, columnDefs, defaultColDef } = this.state;\n        return (\n            console.log(rowData),\n            (\n                <Row className=\"app-user-list\">\n                    <Col sm=\"12\">\n                    </Col>\n                    <Col sm=\"12\">\n                        <Card>\n                            <Row className=\"m-2\">\n                                <Col>\n                                    <h1 sm=\"6\" className=\"float-left\">\n                                        Notification List\n                                    </h1>\n                                </Col>\n                                <Col>\n                                    <Button\n                                        className=\" btn btn-danger float-right\"\n                                        onClick={() => history.push(\"/app/freshlist/notif/addNotification\")}\n                                    >\n                                        Add Notification\n                                    </Button>\n                                </Col>\n                            </Row>\n                            <CardBody>\n                                {this.state.rowData === null ? null : (\n                                    <div className=\"ag-theme-material w-100 my-2 ag-grid-table\">\n                                        <div className=\"d-flex flex-wrap justify-content-between align-items-center\">\n                                            <div className=\"mb-1\">\n                                                <UncontrolledDropdown className=\"p-1 ag-dropdown\">\n                                                    <DropdownToggle tag=\"div\">\n                                                        {this.gridApi\n                                                            ? this.state.currenPageSize\n                                                            : \"\" * this.state.getPageSize -\n                                                            (this.state.getPageSize - 1)}{\" \"}\n                                                        -{\" \"}\n                                                        {this.state.rowData.length -\n                                                            this.state.currenPageSize *\n                                                            this.state.getPageSize >\n                                                            0\n                                                            ? this.state.currenPageSize *\n                                                            this.state.getPageSize\n                                                            : this.state.rowData.length}{\" \"}\n                                                        of {this.state.rowData.length}\n                                                        <ChevronDown className=\"ml-50\" size={15} />\n                                                    </DropdownToggle>\n                                                    <DropdownMenu right>\n                                                        <DropdownItem\n                                                            tag=\"div\"\n                                                            onClick={() => this.filterSize(20)}\n                                                        >\n                                                            20\n                                                        </DropdownItem>\n                                                        <DropdownItem\n                                                            tag=\"div\"\n                                                            onClick={() => this.filterSize(50)}\n                                                        >\n                                                            50\n                                                        </DropdownItem>\n                                                        <DropdownItem\n                                                            tag=\"div\"\n                                                            onClick={() => this.filterSize(100)}\n                                                        >\n                                                            100\n                                                        </DropdownItem>\n                                                        <DropdownItem\n                                                            tag=\"div\"\n                                                            onClick={() => this.filterSize(134)}\n                                                        >\n                                                            134\n                                                        </DropdownItem>\n                                                    </DropdownMenu>\n                                                </UncontrolledDropdown>\n                                            </div>\n                                            <div className=\"d-flex flex-wrap justify-content-between mb-1\">\n                                                <div className=\"table-input mr-1\">\n                                                    <Input\n                                                        placeholder=\"search...\"\n                                                        onChange={(e) =>\n                                                            this.updateSearchQuery(e.target.value)\n                                                        }\n                                                        value={this.state.value}\n                                                    />\n                                                </div>\n                                                <div className=\"export-btn\">\n                                                    <Button.Ripple\n                                                        color=\"primary\"\n                                                        onClick={() => this.gridApi.exportDataAsCsv()}\n                                                    >\n                                                        Export as CSV\n                                                    </Button.Ripple>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <ContextLayout.Consumer>\n                                            {(context) => (\n                                                <AgGridReact\n                                                    gridOptions={{}}\n                                                    rowSelection=\"multiple\"\n                                                    defaultColDef={defaultColDef}\n                                                    columnDefs={columnDefs}\n                                                    rowData={rowData}\n                                                    onGridReady={this.onGridReady}\n                                                    colResizeDefault={\"shift\"}\n                                                    animateRows={true}\n                                                    floatingFilter={false}\n                                                    pagination={true}\n                                                    paginationPageSize={this.state.paginationPageSize}\n                                                    pivotPanelShow=\"always\"\n                                                    enableRtl={context.state.direction === \"rtl\"}\n                                                />\n                                            )}\n                                        </ContextLayout.Consumer>\n                                    </div>\n                                )}\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            )\n        );\n    }\n}\nexport default Notification;","import axios from \"axios\";\n\nconst instance = axios.create({\n  // baseURL: \"http://35.154.86.59/api/admin\",\n  // baseURL: \"http://13.127.52.128:8000\",\n  baseURL: \"http://3.6.37.16:8000\"\n});\n\nexport default instance;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"type\", \"bsSize\", \"valid\", \"invalid\", \"tag\", \"addon\", \"plaintext\", \"innerRef\"];\n\n/* eslint react/prefer-stateless-function: 0 */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, warnOnce, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  type: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  bsSize: PropTypes.string,\n  valid: PropTypes.bool,\n  invalid: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  plaintext: PropTypes.bool,\n  addon: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  type: 'text'\n};\n\nvar Input = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Input, _React$Component);\n\n  function Input(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.getRef = _this.getRef.bind(_assertThisInitialized(_this));\n    _this.focus = _this.focus.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Input.prototype;\n\n  _proto.getRef = function getRef(ref) {\n    if (this.props.innerRef) {\n      this.props.innerRef(ref);\n    }\n\n    this.ref = ref;\n  };\n\n  _proto.focus = function focus() {\n    if (this.ref) {\n      this.ref.focus();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        className = _this$props.className,\n        cssModule = _this$props.cssModule,\n        type = _this$props.type,\n        bsSize = _this$props.bsSize,\n        valid = _this$props.valid,\n        invalid = _this$props.invalid,\n        tag = _this$props.tag,\n        addon = _this$props.addon,\n        plaintext = _this$props.plaintext,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n    var checkInput = ['radio', 'checkbox'].indexOf(type) > -1;\n    var isNotaNumber = new RegExp('\\\\D', 'g');\n    var fileInput = type === 'file';\n    var textareaInput = type === 'textarea';\n    var selectInput = type === 'select';\n    var rangeInput = type === 'range';\n    var Tag = tag || (selectInput || textareaInput ? type : 'input');\n    var formControlClass = 'form-control';\n\n    if (plaintext) {\n      formControlClass = formControlClass + \"-plaintext\";\n      Tag = tag || 'input';\n    } else if (fileInput) {\n      formControlClass = formControlClass + \"-file\";\n    } else if (rangeInput) {\n      formControlClass = formControlClass + \"-range\";\n    } else if (checkInput) {\n      if (addon) {\n        formControlClass = null;\n      } else {\n        formControlClass = 'form-check-input';\n      }\n    }\n\n    if (attributes.size && isNotaNumber.test(attributes.size)) {\n      warnOnce('Please use the prop \"bsSize\" instead of the \"size\" to bootstrap\\'s input sizing.');\n      bsSize = attributes.size;\n      delete attributes.size;\n    }\n\n    var classes = mapToCssModules(classNames(className, invalid && 'is-invalid', valid && 'is-valid', bsSize ? \"form-control-\" + bsSize : false, formControlClass), cssModule);\n\n    if (Tag === 'input' || tag && typeof tag === 'function') {\n      attributes.type = type;\n    }\n\n    if (attributes.children && !(plaintext || type === 'select' || typeof Tag !== 'string' || Tag === 'select')) {\n      warnOnce(\"Input with a type of \\\"\" + type + \"\\\" cannot have children. Please use \\\"value\\\"/\\\"defaultValue\\\" instead.\");\n      delete attributes.children;\n    }\n\n    return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n      ref: innerRef,\n      className: classes,\n      \"aria-invalid\": invalid\n    }));\n  };\n\n  return Input;\n}(React.Component);\n\nInput.propTypes = propTypes;\nInput.defaultProps = defaultProps;\nexport default Input;"],"sourceRoot":""}