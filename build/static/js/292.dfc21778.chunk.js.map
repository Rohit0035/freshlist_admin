{"version":3,"sources":["views/apps/freshlist/order/AddOrder.js","axiosConfig.js"],"names":["options","label","value","AddOrder","props","changeHandler1","e","setState","status","target","changeHandler","name","submitHandler","preventDefault","axiosConfig","post","state","then","response","console","log","history","push","catch","error","delivery_slot","quantity","phone_no","order_zone","delivery_add","attribute","items","notifyby_email","delivery_date","time_slot","productName","attribuName","previousAdd","newAddress","get","data","err","className","col-sm-6","onClick","onSubmit","this","lg","md","type","placeholder","onChange","d_date","width","product","map","pnlist","_id","key","product_name","attlist","units_name","Ripple","color","Component","instance","axios","create","baseURL"],"mappings":"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","file":"static/js/292.dfc21778.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Input,\r\n  Label,\r\n  Button,\r\n  FormGroup,\r\n  CustomInput,\r\n} from \"reactstrap\";\r\nimport { history } from \"../../../../history\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport ReactMultiSelectCheckboxes from \"react-multiselect-checkboxes\";\r\n\r\nconst options = [\r\n  { label: \"Email\", value: 1 },\r\n  { label: \"WhatsApp\", value: 2 },\r\n  { label: \"SMS\", value: 3 },\r\n  { label: \"App Notification\", value: 4 },\r\n];\r\nexport class AddOrder extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      delivery_slot: \"\",\r\n      quantity: \"\",\r\n      phone_no: \"\",\r\n      order_zone: \"\",\r\n      delivery_add: \"\",\r\n      attribute: \"\",\r\n      items: \"\",\r\n      notifyby_email: \"\",\r\n      delivery_date: \"\",\r\n      time_slot: \"\",\r\n      status: \"\",\r\n      productName: [],\r\n      attribuName: [],\r\n      previousAdd: \"\",\r\n      newAddress: \"\",\r\n    };\r\n  }\r\n  changeHandler1 = (e) => {\r\n    this.setState({ status: e.target.value });\r\n  };\r\n\r\n  changeHandler = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  async componentDidMount() {\r\n    axiosConfig\r\n      .get(\"/admin/product_list\")\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.setState({\r\n          productName: response.data.data,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n\r\n    axiosConfig\r\n      .get(\"/admin/getall_units\")\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.setState({\r\n          attribuName: response.data.data,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    axiosConfig\r\n      .post(\"/admin/addorder\", this.state)\r\n\r\n      .then((response) => {\r\n        console.log(response);\r\n        // swal(\"Success!\", \"Submitted SuccessFull!\", \"success\");\r\n        this.props.history.push(\"/app/freshlist/order/all\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col>\r\n              <h1 col-sm-6 className=\"float-left\">\r\n                Add Order\r\n              </h1>\r\n            </Col>\r\n            <Col>\r\n              <Button\r\n                className=\" btn btn-danger float-right\"\r\n                onClick={() => history.push(\"/app/freshlist/order/all\")}\r\n              >\r\n                Back\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={this.submitHandler}>\r\n              <Row className=\"mb-2\">\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Mobile Number</Label>\r\n                    <Input\r\n                      type=\"number\"\r\n                      placeholder=\"Mobile Number\"\r\n                      name=\"phone_no\"\r\n                      value={this.state.phone_no}\r\n                      onChange={this.changeHandler}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Delivery Slot</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      placeholder=\"Delivery Slot\"\r\n                      name=\"delivery_slot\"\r\n                      value={this.state.delivery_slot}\r\n                      onChange={this.changeHandler}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                {/* <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Items</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      placeholder=\"Items\"\r\n                      name=\"items\"\r\n                      value={this.state.items}\r\n                      onChange={this.changeHandler}\r\n                    />\r\n                  </FormGroup>\r\n                </Col> */}\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Delivery Address</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      placeholder=\"Delivery Address\"\r\n                      name=\"delivery_add\"\r\n                      value={this.state.delivery_add}\r\n                      onChange={this.changeHandler}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Previous Address</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      placeholder=\"Previous Address\"\r\n                      name=\"previousAdd\"\r\n                      value={this.state.previousAdd}\r\n                      onChange={this.changeHandler}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>New Address</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      placeholder=\"New Address\"\r\n                      name=\"previousAdd\"\r\n                      value={this.state.newAddress}\r\n                      onChange={this.changeHandler}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Delivery Date</Label>\r\n                    <Input\r\n                      type=\"date\"\r\n                      placeholder=\"Delivery Date\"\r\n                      name=\"d_date\"\r\n                      value={this.state.d_date}\r\n                      onChange={this.changeHandler}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Time Slot</Label>\r\n                    <Input\r\n                      type=\"time\"\r\n                      placeholder=\"Time Slot\"\r\n                      name=\"time_slot\"\r\n                      value={this.state.time_slot}\r\n                      onChange={this.changeHandler}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Notify</Label>\r\n\r\n                    <ReactMultiSelectCheckboxes\r\n                      options={options}\r\n                      width=\"100%\"\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <FormGroup>\r\n                    <Label>Order Zone </Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      placeholder=\"\"\r\n                      name=\"order_zone\"\r\n                      value={this.state.order_zone}\r\n                      onChange={this.changeHandler}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n\r\n                {/* <Col lg=\"6\" md=\"6\">\r\n                  <Label>Order Status</Label>\r\n                  <CustomInput\r\n                    type=\"select\"\r\n                    placeholder=\"\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.changeHandler}\r\n                  >\r\n                    <option>--Select--</option>\r\n                    <option value=\"Pending\">Pending</option>\r\n                    <option value=\"Approved\">Approved</option>\r\n                    <option value=\"Packaging\">Packaging</option>\r\n                    <option value=\"Rejected\">Rejected</option>\r\n                    <option value=\"Outfordelivery\">Outfordelivery</option>\r\n                    <option value=\"Canceled\">Canceled</option>\r\n                    <option value=\"Delivered\">Delivered</option>\r\n                    <option value=\"Failedtodeliver\">Failedtodeliver</option>\r\n                    <option value=\"Returned\">Returned</option>\r\n                  </CustomInput>\r\n                </Col> */}\r\n              </Row>\r\n              <Row className=\"m-2\">\r\n                <Col>\r\n                  <h1 col-sm-6 className=\"float-left\">\r\n                    Add Product\r\n                  </h1>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col lg=\"6\" md=\"6\" className=\"mb-1\">\r\n                  <Label>Product Name</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    placeholder=\"Enter Product\"\r\n                    name=\"product\"\r\n                    value={this.state.product}\r\n                    onChange={this.changeHandler}\r\n                  >\r\n                    <option>Select Product</option>\r\n                    {this.state.productName?.map((pnlist) => (\r\n                      <option value={pnlist?._id} key={pnlist?._id}>\r\n                        {pnlist?.product_name}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" className=\"mb-1\">\r\n                  <Label>Attribute Name</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    placeholder=\"Enter Attribute\"\r\n                    name=\"attribute\"\r\n                    value={this.state.attribute}\r\n                    onChange={this.changeHandler}\r\n                  >\r\n                    <option>Select Attribute</option>\r\n                    {this.state.attribuName?.map((attlist) => (\r\n                      <option value={attlist?._id} key={attlist?._id}>\r\n                        {attlist?.units_name}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                </Col>\r\n\r\n                <Col lg=\"6\" md=\"6\">\r\n                  <Label>Quantity</Label>\r\n                  <Input\r\n                    type=\"number\"\r\n                    placeholder=\"Quantity\"\r\n                    name=\"quantity\"\r\n                    value={this.state.quantity}\r\n                    onChange={this.changeHandler}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Button.Ripple\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  className=\"mr-1 mt-2\"\r\n                >\r\n                  Add Order\r\n                </Button.Ripple>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default AddOrder;\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  // baseURL: \"http://35.154.86.59/api/admin\",\r\n  // baseURL: \"http://13.127.52.128:8000\",\r\n  baseURL: \"http://3.6.37.16:8000\"\r\n});\r\n\r\nexport default instance;\r\n"],"sourceRoot":""}